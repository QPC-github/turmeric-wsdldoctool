<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:tns="http://www.ebay.com/marketplace/marketplacecatalog/v1/services" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns0="http://www.ebay.com/marketplace/marketplacecatalog/v1/services" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" name="ProductMetadataService" targetNamespace="http://www.ebay.com/marketplace/marketplacecatalog/v1/services">
	<wsdl:documentation/>
	<wsdl:types>
		<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://www.ebay.com/marketplace/marketplacecatalog/v1/services">


			<xs:complexType abstract="true" name="BaseServiceRequest">
				<xs:annotation>
					<xs:documentation>
						This is the base class for request container for
						all service operations.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType abstract="true" name="BaseServiceResponse">
				<xs:annotation>
					<xs:documentation>
						Base response container for all service
						operations. Contains error information
						associated with the request.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="ack" type="tns:AckValue">
						<xs:annotation>
							<xs:documentation>
								Indicates whether there are any errors
								or warnings associated with the
								processing of the request.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="errorMessage" type="tns:ErrorMessage">
						<xs:annotation>
							<xs:documentation>
								Information for an error or warning that
								occurred when eBay processed the
								request. Not returned when the ack value
								is Success.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="version" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								The version of the response payload
								schema. Indicates the version of the
								schema that eBay used to process the
								request. Developer Technical Support may
								ask you for the version value when you
								work with them to troubleshoot issues.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="timestamp" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
								This value represents the date and time
								when eBay processed the request. The
								time zone of this value is &lt;a
								href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;
								and the format is the ISO 8601 date and
								time format (YYYY-MM-DDTHH:MM:SS.SSSZ).
								See the "dateTime" type for
								information about this time format and
								converting to and from the GMT time
								zone.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>



			<xs:complexType name="ErrorMessage">
				<xs:annotation>
					<xs:documentation>
						ErrorMessage to indicate any Error/Warning
						occurred as part of service call. Any run time
						error will not be reported here, but will be
						reported as part of soap fault.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="error" nillable="true" type="tns:ErrorData">
						<xs:annotation>
							<xs:documentation>
								Details about a single error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>



			<xs:complexType name="ErrorData">
				<xs:annotation>
					<xs:documentation>
						This represents error details.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="errorId" type="xs:long">
						<xs:annotation>
							<xs:documentation>
								A unique code that identifies the
								particular error condition that
								occurred. Your application can use error
								codes as identifiers in your customized
								error-handling algorithms.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="domain" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Name of the domain upon which the error
								occurred. &lt;dl&gt; &lt;lh&gt;Domains
								include:&lt;/lh&gt; &lt;dt&gt;
								Marketplace &lt;/dt&gt; &lt;dd&gt; A
								business or validation error occurred
								for the Merchandising Service.
								&lt;/dd&gt; &lt;dt&gt; SOA &lt;/dt&gt;
								&lt;dd&gt; An exception occurred in the
								Service Oriented Architecture (SOA)
								framework. &lt;/dd&gt; &lt;/dl&gt;
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="severity" type="tns:ErrorSeverity">
						<xs:annotation>
							<xs:documentation>
								Indicates whether the error caused the
								request to fail (Error) or not
								(Warning). &lt;br&gt;&lt;br&gt; If the
								request fails and the source of the
								problem is within the application (such
								as a missing required element), please
								change the application before you retry
								the request. If the problem is due to
								end-user input data, please alert the
								end-user to the problem and provide the
								means for them to correct the data. Once
								the problem in the application or data
								is resolved, you can attempt to re- send
								the request to eBay.
								&lt;br&gt;&lt;br&gt; If the source of
								the problem is on eBay's side, you can
								retry the request as-is a reasonable
								number of times (eBay recommends twice).
								If the error persists, contact Developer
								Technical Support. Once the problem has
								been resolved, the request may be resent
								in its original form.
								&lt;br&gt;&lt;br&gt; When a warning
								occurs, the error is returned in
								addition to the business data. In this
								case, you do not need to retry the
								request (as the original request was
								successful). However, depending on the
								cause or nature of the warning, you
								might need to contact either the end
								user or eBay to effect a long term
								solution to the problem to prevent it
								from reoccurring in the future.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="category" type="tns:ErrorCategory">
						<xs:annotation>
							<xs:documentation>
								There are three categories of errors:
								request errors, application errors, and
								system errors.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="message" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								A detailed description of the condition
								that resulted in the error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="subdomain" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Name of the subdomain upon which the
								error occurred. &lt;dl&gt;
								&lt;lh&gt;Subdomains include:&lt;/lh&gt;
								&lt;dt&gt; Merchandising &lt;/dt&gt;
								&lt;dd&gt; The error is specific to the
								Merchandising service. &lt;/dd&gt;
								&lt;dt&gt; MarketplaceCommon &lt;/dt&gt;
								&lt;dd&gt; The error is common to all
								Marketplace services. &lt;/dd&gt;
								&lt;/dl&gt;
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="exceptionId" type="xs:token">
						<xs:annotation>
							<xs:documentation>
								Unique identifier for an exception
								associated with an error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="parameter" nillable="true" type="tns:ErrorParameter">
						<xs:annotation>
							<xs:documentation>
								Some warning and error messages return
								one or more variables that contain
								contextual information about the error.
								This is often the field or value that
								triggered the error.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<AllCalls/>
									<Returned>Conditionally</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>


			<xs:complexType name="ErrorParameter">
				<xs:annotation>
					<xs:documentation>
						Contextual information associated with an error.
					</xs:documentation>
				</xs:annotation>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="name" type="xs:string">
							<xs:annotation>
								<xs:documentation>
									The name of the parameter in the
									list of parameter types returned
									within the error type.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<AllCalls/>
										<Returned>
											Conditionally
										</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:attribute>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>



			<xs:simpleType name="AckValue">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error
						(causing the request to fail) or an
						informational error (a warning) that should be
						communicated to the user.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Success">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully,
								but something occurred that may affect
								your application or the user.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Failure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								not processed successfully. When a
								serious application-level error occurs,
								the error is returned instead of the
								business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but with some
								warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="PartialFailure">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								processed successfully but with some
								warnings.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>

			<xs:simpleType name="ErrorSeverity">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error is a severe error
						(causing the request to fail) or an
						informational error (a warning) that should be
						communicated to the user.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Error">
						<xs:annotation>
							<xs:documentation>
								The request that triggered the error was
								not processed successfully. When a
								serious application-level error occurs,
								the error is returned instead of the
								business data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								The request was processed successfully,
								but something occurred that may affect
								your application or the user. For
								example, eBay may have changed a value
								the user sent in. In this case, eBay
								returns a normal, successful response
								and also returns the warning.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>

			<xs:simpleType name="ErrorCategory">
				<xs:annotation>
					<xs:documentation>
						There are three categories of error: request
						errors, application errors, and system errors.
						Request and application errors are caused
						primarily by invalid data passed in the request.
						System errors are caused primarily by
						application failures and cannot be corrected by
						changing request values.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="System">
						<xs:annotation>
							<xs:documentation>
								Indicates that an error has occurred on
								the eBay system side, such as a database
								or server down. An application can retry
								the request as-is a reasonable number of
								times (eBay recommends twice). If the
								error persists, contact Developer
								Technical Support. Once the problem has
								been resolved, the request may be resent
								in its original form.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Compatibility">
						<xs:annotation>
							<xs:documentation>
								An error occurred due to a problem with
								the request, such as missing or invalid
								fields. The problem must be corrected
								before the request can be made again. If
								the problem is due to something in the
								application (such as a missing required
								field), the application must be changed.
								Once the problem in the application or
								data is resolved, resend the corrected
								request to eBay.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Request">
						<xs:annotation>
							<xs:documentation>
								An error occurred due to a problem with
								the request, such as invalid or missing
								data. The problem must be corrected
								before the request can be made again. If
								the problem is a result of end-user
								data, the application must alert the
								end-user to the problem and provide the
								means for the end-user to correct the
								data. Once the problem in the data is
								resolved, resend the request to eBay
								with the corrected data.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>

			<xs:complexType name="NumericValue">
				<xs:annotation>
					<xs:documentation>
						This class holds a numeric value
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								a number
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="unitOfMeasurement" type="xs:token">
						<xs:annotation>
							<xs:documentation>
								UOM of this value. List of valid values
								are: bps, kbps, bit, byte, kb, MB, mW,
								W, Hz, kHz, m, mm, rph, hr, min, ms, ns,
								sec, g, lbs This is optional b/c UOM may
								not apply to all numeric values (e.g.
								number of doors)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="StringValue">
				<xs:annotation>
					<xs:documentation>
						This class holds a String value
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="value" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								a string value
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="URIValue">
				<xs:annotation>
					<xs:documentation>
						This class holds a URL value
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="value" type="xs:anyURI">
						<xs:annotation>
							<xs:documentation>
								as part of request, this will be the URL
								to download media file as part of
								response, this will be the URL where the
								media file is stored on EPS
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>


			<xs:complexType name="Property">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="canonicalName" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								This is the canonical name of the
								property. Used to identify a property
								within a catalog that this category
								belongs to.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="propertyNameMetadata" type="tns:PropertyNameMetadata">
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="displayName" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								This will be the display name of the
								property
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="PropertyValue">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="property" type="xs:string">
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="value" type="tns:Value">
					</xs:element>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="Value">
				<xs:sequence>
					<xs:choice>
						<xs:annotation>
							<xs:documentation>
								A value can be one of the types given
								below.
							</xs:documentation>
						</xs:annotation>
						<xs:element name="text" type="tns:StringValue">
							<xs:annotation>
								<xs:documentation>
									For string value type.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="number" type="tns:NumericValue">
							<xs:annotation>
								<xs:documentation>
									For numeric value type.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="URL" type="tns:URIValue">
							<xs:annotation>
								<xs:documentation>
									For URL value type.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
					<xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>













			<xs:element name="getProductSearchNamesResponse" type="tns:GetProductSearchNamesResponse">

			</xs:element>
			<xs:element name="getProductSearchValuesRequest" type="tns:GetProductSearchValuesRequest">

				<xs:annotation>
					<xs:documentation>
						User can request if the user wants the response
						a List not as Tree
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="getProductSearchValuesResponse" type="tns:GetProductSearchValuesResponse">

			</xs:element>




			<xs:complexType name="GetProductSearchNamesRequest">
				<xs:annotation>
					<xs:documentation>
						Request object for getPropertiesInCatalog
						operation.
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="categoryId" type="xs:string">
								<xs:annotation>
									<xs:documentation>
										Return properties for a given
										catalog enabled category. We
										will throw an error if the
										category is not catalog enabled.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="dataset" type="xs:token">
								<xs:annotation>
									<xs:documentation>
										This will define what are
										properties that will be returned
										for this category enabled
										category. We will document the
										view sets that are exposed and
										what will come out of each view
										set
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>

					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:element name="getProductSearchNamesRequest" type="tns:GetProductSearchNamesRequest">
				<xs:annotation>
					<xs:documentation>
						Request object for getPropertiesInCatalog
						operation.
					</xs:documentation>
				</xs:annotation>
			</xs:element>

			<xs:complexType name="GetProductSearchNamesResponse">
				<xs:annotation>
					<xs:documentation>
						Response containing the list of properties
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceResponse">
						<xs:sequence>

							<xs:element maxOccurs="unbounded" minOccurs="0" name="properties" type="tns:Properties">
								<xs:annotation>
									<xs:documentation>
										This will contain the category
										id , version and all the
										properties for the input catalog
										enabled category id.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:complexType name="GetProductSearchValuesRequest">
				<xs:complexContent>
					<xs:extension base="tns:GetProductSearchValuesBaseRequest">
						<xs:sequence>

							<xs:element maxOccurs="1" minOccurs="1" name="propertyName" type="xs:string">
								<xs:annotation>
									<xs:documentation>
										PropertyLiteral Determines which
										property to be returned.
									</xs:documentation>
								</xs:annotation>
							</xs:element>



						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetProductSearchValuesBaseRequest">
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="categoryId" type="xs:string">
								<xs:annotation>
									<xs:documentation>
										This should be a valid category
										id.
									</xs:documentation>
								</xs:annotation>
							</xs:element>

							<xs:element maxOccurs="unbounded" minOccurs="0" name="propertyFilter" type="tns:PropertyValue">
								<xs:annotation>
									<xs:documentation>
										Constrains the output of values
										for the given PropertyLiteral
										(or group of properties) as per
										given
										ConstrainingPropertyLiteral:ConstrainingValueLiteral
										pair (or pairs) according to the
										respective dependency graph.
										AND-logic will be applied within
										the constraint.
									</xs:documentation>
								</xs:annotation>
							</xs:element>

							<xs:element maxOccurs="1" minOccurs="0" name="listFormatOnly" type="xs:boolean">
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
			<xs:complexType name="GetProductSearchValuesResponse">
				<xs:annotation>
					<xs:documentation>
						This will contain the response for the
						propertyValues. If the category is fitment
						enabled then we will have the propertyValueTree
						populated. If the category is not fitment
						enabled then we will generate the propertyValues
						which will be a list of values for each property
						and not a dependency tree
					</xs:documentation>
				</xs:annotation>
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceResponse">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="0" name="metadataVersion" type="xs:string">
								<xs:annotation>
									<xs:documentation>
										Version information reflects the
										last update of the values within
										the dependency graph.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="propertyValues" type="tns:PropertyValue">
								<xs:annotation>
									<xs:documentation>
										This will be populated for the
										non-fitment enabled category
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="0" name="propertyValuesTree" type="tns:PropertyNameValue">
								<xs:annotation>
									<xs:documentation>
										This will be populated for
										non-fitment enabled category
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element maxOccurs="1" minOccurs="1" name="treeFormat" type="xs:boolean">
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>




			<xs:simpleType name="OrderType">
				<xs:annotation>
					<xs:documentation>
						Defines the order type as Ascending or
						Descending
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Ascending"/>
					<xs:enumeration value="Descending"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:element name="getCompatibilitySearchNamesRequest" type="tns:GetCompatibilitySearchNamesRequest">
			</xs:element>
			<xs:element name="getCompatibilitySearchNamesResponse" type="tns:GetProductSearchNamesResponse">
			</xs:element>

			<xs:complexType name="GetCompatibilitySearchNamesRequest">
				<xs:complexContent>
					<xs:extension base="tns:BaseServiceRequest">
						<xs:sequence>
							<xs:element maxOccurs="1" minOccurs="1" name="categoryId" type="xs:string">
								<xs:annotation>
									<xs:documentation>
										Provide the interface category
										id. For example to get the cars
										properties, provide tires
										categoyid.
									</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="dataset" type="xs:token">
								<xs:annotation>
									<xs:documentation>
										This will define what are
										properties that will be returned
										for this catalog enabled
										category. We will document the
										view sets that are exposed and
										what will come out of each view
										set
									</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:element name="getCompatibilitySearchValuesRequest" type="tns:GetProductSearchValuesRequest">
			</xs:element>
			<xs:element name="getCompatibilitySearchValuesResponse" type="tns:GetProductSearchValuesResponse">
			</xs:element>


			<xs:complexType name="Properties">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="metadataVersion" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Version information reflects the latest
								update of the properties or values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="categoryId" type="xs:string">
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="property" type="tns:Property">
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="dataset" type="xs:token"/>
				</xs:sequence>
			</xs:complexType>





			<xs:complexType name="PropertyNameMetadata">
				<xs:annotation>
					<xs:documentation>
						This will contain any metadata about the propert
						name.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="displaySequence" type="xs:int">
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0"/>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="BrandMPN">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="1" name="brand" type="xs:string">
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="1" name="MPN" type="xs:string"/>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="PropertyNameValue">
				<xs:sequence>
					<xs:element maxOccurs="1" minOccurs="0" name="name" type="xs:string">
					</xs:element>
					<xs:element maxOccurs="1" minOccurs="0" name="value" type="xs:string">
					</xs:element>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="childPropertyNameValue" type="tns:PropertyNameValue"/>
				</xs:sequence>
			</xs:complexType>



			<xs:simpleType name="SortPriority">
				<xs:restriction base="xs:token">
					<xs:enumeration value="Sort1"/>
					<xs:enumeration value="Sort2"/>
					<xs:enumeration value="Sort3"/>
					<xs:enumeration value="Sort4"/>
					<xs:enumeration value="Sort5"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:element name="getProductSearchValuesBulkRequest" type="tns:GetProductSearchValuesBulkRequest">
			</xs:element>
			<xs:element name="getProductSearchValuesBulkResponse" type="tns:GetProductSearchValuesBulkResponse">
			</xs:element>
			<xs:element name="getCompatibilitySearchValuesBulkRequest" type="tns:GetProductSearchValuesBulkRequest">
			</xs:element>
			<xs:element name="getCompatibilitySearchValuesBulkResponse" type="tns:GetCompatibilitySearchValuesBulkResponse">
			</xs:element>

			<xs:complexType name="GetCompatibilitySearchValuesBulkRequest">
				<xs:complexContent>
					<xs:extension base="tns:GetProductSearchValuesBaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="propertyName" type="xs:string">
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:complexType name="GetProductSearchValuesBulkResponse">
				<xs:complexContent>
					<xs:extension base="tns:GetProductSearchValuesResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:complexType name="GetCompatibilitySearchValuesBulkResponse">
				<xs:complexContent>
					<xs:extension base="tns:GetProductSearchValuesResponse">
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>



			<xs:complexType name="GetProductSearchValuesBulkRequest">
				<xs:complexContent>
					<xs:extension base="tns:GetProductSearchValuesBaseRequest">
						<xs:sequence>
							<xs:element maxOccurs="unbounded" minOccurs="0" name="propertyName" type="xs:string">
							</xs:element>
						</xs:sequence>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>

			<xs:simpleType name="DatasetValue">
				<xs:restriction base="xs:token">
					<xs:enumeration value="Searchable"/>
					<xs:enumeration value="Sortable"/>
					<xs:enumeration value="DisplayableSmall"/>
					<xs:enumeration value="DisplayableMedium"/>
					<xs:enumeration value="DisplayableLarge"/>
					<xs:enumeration value="DisplayableAll"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:schema>
	</wsdl:types>
	<wsdl:message name="getCompatibilitySearchValuesResponse">
		<wsdl:part element="ns0:getCompatibilitySearchValuesResponse" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getProductSearchValuesRequest">
		<wsdl:part element="ns0:getProductSearchValuesRequest" name="parameters">
			<wsdl:documentation>
				Request object for getPropertyValues operation.
			</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getProductSearchValuesBulkRequest">
		<wsdl:part element="ns0:getProductSearchValuesBulkRequest" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getCompatibilitySearchValuesBulkResponse">
		<wsdl:part element="ns0:getCompatibilitySearchValuesBulkResponse" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getCompatibilitySearchValuesBulkRequest">
		<wsdl:part element="ns0:getCompatibilitySearchValuesBulkRequest" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getProductSearchNamesResponse">
		<wsdl:part element="ns0:getProductSearchNamesResponse" name="parameters">
			<wsdl:documentation>
				Response object for getPropertiesInCatalog operation.
			</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getProductSearchValuesBulkResponse">
		<wsdl:part element="ns0:getProductSearchValuesBulkResponse" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getCompatibilitySearchValuesRequest">
		<wsdl:part element="ns0:getCompatibilitySearchValuesRequest" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getProductSearchValuesResponse">
		<wsdl:part element="ns0:getProductSearchValuesResponse" name="parameters">
			<wsdl:documentation>
				Response object for getPropertyValues operation.
			</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getProductSearchNamesRequest">
		<wsdl:part element="ns0:getProductSearchNamesRequest" name="parameters">
			<wsdl:documentation>
				Request object for getPropertiesInCatalog operation.
			</wsdl:documentation>
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getCompatibilitySearchNamesRequest">
		<wsdl:part element="ns0:getCompatibilitySearchNamesRequest" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:message name="getCompatibilitySearchNamesResponse">
		<wsdl:part element="ns0:getCompatibilitySearchNamesResponse" name="parameters">
		</wsdl:part>
	</wsdl:message>
	<wsdl:portType name="ProductMetadataServicePortType">
		<wsdl:operation name="getProductSearchNames">
			<wsdl:documentation>
				This Operation returns all properties which are
				available for a given catalog enabled category. These
				properties, along with their respective values, can be
				used to query the catalog via find and get product
				operations

				For example If the input is parts category id, the
				properties would be (according to the dependency graph):
				&amp;quot;Part type &amp;quot;, &amp;quot;Sub part type
				&amp;quot;, &amp;quot;Manufacturer &amp;quot; if the
				input is tires category id, the properties would be
				(according to the dependency graph):
				&amp;quot;Manufacturer &amp;quot;, &amp;quot;Tire Width
				&amp;quot;, &amp;quot;Aspect Ratio &amp;quot;,
				&amp;quot;Diameter &amp;quot;, &amp;quot;Load Index
				&amp;quot;, &amp;quot;Speed Index &amp;quot;

			</wsdl:documentation>
			<wsdl:input message="ns0:getProductSearchNamesRequest">
			</wsdl:input>
			<wsdl:output message="ns0:getProductSearchNamesResponse">
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getCompatibilitySearchNames">
			<wsdl:documentation>
				This operation will provide the ability to get
				properties of the application. For example,If the input
				is Tires category Id then the response would be the
				properties : &amp;quot;Make &amp;quot;, &amp;quot;Model
				&amp;quot;, &amp;quot;Year &amp;quot;, &amp;quot;Trim
				&amp;quot;, &amp;quot;Engine &amp;quot;
			</wsdl:documentation>
			<wsdl:input message="ns0:getCompatibilitySearchNamesRequest">
			</wsdl:input>
			<wsdl:output message="ns0:getCompatibilitySearchNamesResponse">
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getProductSearchValues">
			<wsdl:documentation>
				This will contain the response for the propertyValues.
				If the category is fitment enabled then we will have the
				propertyValueTree populated. If the category is not
				fitment enabled then we will generate the propertyValues
				which will be a list of values for each property and not
				a dependency tree


				For example,In case of fitment enabled category, For the
				input tire category id, get me all possible values for a
				property (e.g. Aspect Ratio) , constrained by one or
				more properties (e.g. Tire Width= &amp;quot;225
				&amp;quot;, AND Brand= &amp;quot;Bridgestone &amp;quot;)

				Returns a list of all available aspect ratios for
				Bridgestone tires which have a tire width of 225.


			</wsdl:documentation>
			<wsdl:input message="ns0:getProductSearchValuesRequest">
			</wsdl:input>
			<wsdl:output message="ns0:getProductSearchValuesResponse">
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getProductSearchValuesBulk">
			<wsdl:documentation>
				This will enable the user to get property values for
				more than one field. This will allow the user to get
				values for upto 10 fields.This operation will be Rate
				limited.
			</wsdl:documentation>
			<wsdl:input message="ns0:getProductSearchValuesBulkRequest">
			</wsdl:input>
			<wsdl:output message="ns0:getProductSearchValuesBulkResponse">
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getCompatibilitySearchValues">
			<wsdl:documentation>
				This operation will provide the property values for the
				application category. Input will be the category id of
				the interface category. This operation will only allow
				the user to get one field at a time

				For input Tires category id, Get me all possible values
				for a property (e.g. Engine) , constrained by one or
				more properties (e.g. Make= &amp;quot;Honda &amp;quot;,
				Namespace= &amp;quot;Application &amp;quot; AND Model=
				&amp;quot;Civic &amp;quot; AND Year= &amp;quot;1997
				&amp;quot;)

				Returns a list of all available engines for a 1997 Honda
				Civic
			</wsdl:documentation>
			<wsdl:input message="ns0:getCompatibilitySearchValuesRequest">
			</wsdl:input>
			<wsdl:output message="ns0:getCompatibilitySearchValuesResponse">
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getCompatibilitySearchValuesBulk">
			<wsdl:documentation>
				This will enable the user to get compatibiltiy property
				values for more than one field. This will allow the user
				to get values for upto 10 fields.This operation will be
				Rate limited.
			</wsdl:documentation>
			<wsdl:input message="ns0:getCompatibilitySearchValuesBulkRequest">
			</wsdl:input>
			<wsdl:output message="ns0:getCompatibilitySearchValuesBulkResponse">
			</wsdl:output>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="ProductMetadataServiceSOAP12Binding" type="ns0:ProductMetadataServicePortType">
		<soap12:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
		<wsdl:operation name="getProductSearchNames">
			<soap12:operation soapAction="urn:getProductSearchNames" style="document"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getProductSearchValues">
			<soap12:operation soapAction="urn:getProductSearchValues" style="document"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getCompatibilitySearchNames">
			<soap12:operation soapAction="urn:getCompatibilitySearchNames" style="document"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getProductSearchValuesBulk">
			<soap12:operation soapAction="urn:getProductSearchValuesBulk" style="document"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getCompatibilitySearchValues">
			<soap12:operation soapAction="urn:getCompatibilitySearchValues" style="document"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="getCompatibilitySearchValuesBulk">
			<soap12:operation soapAction="urn:getCompatibilitySearchValuesBulk" style="document"/>
			<wsdl:input>
				<soap12:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap12:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="ProductMetadataService">
		<wsdl:documentation>
			This service provides the ability to get product medata.
			Metadata includes product property names and values. This
			also provides the ability to get metadata about specific
			kind of properties like searchable, sortable, displayable
			etc
			<Version>1.0.0</Version>
		</wsdl:documentation>
		<wsdl:port binding="ns0:ProductMetadataServiceSOAP12Binding" name="ProductMetadataServiceSOAP12port_http">
			<soap12:address location="http://svcs.ebay.com/services/marketplacecatalog/ProductMetadataService/v1"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
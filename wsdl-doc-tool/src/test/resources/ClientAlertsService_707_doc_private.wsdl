<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions 
	xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:xmime="http://www.w3.org/2005/05/xmlmime"
	xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" 
	xmlns:ns="urn:ebay:apis:eBLBaseComponents" 
	xmlns="urn:ebay:apis:eBLBaseComponents"
	targetNamespace="urn:ebay:apis:eBLBaseComponents">
	<wsdl:types>
<!-- Version 707 -->
<!-- Internal version. Do not distribute externally. -->
<!-- (c) 2011 eBay, Inc. All rights reserved -->
		<xs:schema targetNamespace="urn:ebay:apis:eBLBaseComponents"  
		xmlns:ns="urn:ebay:apis:eBLBaseComponents" 
		xmlns="urn:ebay:apis:eBLBaseComponents"
		xmlns:xmime="http://www.w3.org/2005/05/xmlmime"
		xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">


	<!-- ##### SHARED_TYPES ##### -->
	<!--
##### from file ./../Shared/xsd/AbstractRequestType.xsd #####

-->
	<xs:complexType name="AbstractRequestType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Base type definition of the request payload, which can carry any type
				of payload content plus optional versioning information and detail level requirements.
				All concrete request types are derived from the abstract request type.
				The naming convention we use for the concrete type names is the name of the service
				(the verb or call name) followed by "RequestType": VerbNameRequestType
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<!-- PRIVATE -->
			<xs:element name="OutputSelector" type="xs:string" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Another way of specifying the detail level.  Value of each OutputSelector is x-path.
						It's additive - to see more than one detail level, specify all of them:
						"User.PayPalInfo.* User.FeedbackInfo" etc.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="MessageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If you pass a value in MessageID in a request,
						we'll return the same value in CorrelationID in the response.
						If you're making a lot of calls, you can use this for tracking that a
						response is returned for every request and to match
						particular responses to particular requests. (In this case, specify
						a different value for each request.) You can specify any value
						that is useful to you.
			<!-- PRIVATE -->
						[DocInternal] The following text can be edited and then added for MessageID when an
						applicable call is released:
						Note that some calls are designed to retrieve large sets of
						meta-data that only change once a day or less often.
						To improve performance, these calls return cached responses when you request
						all available data (with no filters). In these cases, the correlation ID is
						not applicable. However, if you specify an input filter to reduce the amount
						data returned, you can use MessageID and CorrelationID for these meta-data
						calls. These are the meta-data calls that can return cached responses:
						GetCategories, GetAttributesCS, GetCategory2CS, GetAttributesXsl,
						GetProductFinder, GetProductFinderXsl, and GetProductSearchPage.
			<!-- PRIVATE -->
					</xs:documentation>
					<xs:appinfo>
						<MaxLength/>
						<CallInfo>
							<AllCalls/>
							<RequiredInput>No</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
					<!-- PRIVATE -->			
			 <xs:element name="Version" type="xs:string" minOccurs="0" >
			 	<xs:annotation>
				 <xs:documentation>
					For Client Alerts only. Specify the version number of the API code that you are programming
					against (e.g., 561).

					This element is used to manage backwards compatibility
					with internal applications.

				 </xs:documentation>
				</xs:annotation>
			</xs:element>
					<!-- PRIVATE -->			
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--
##### from file ./../Shared/xsd/AbstractResponseType.xsd #####

-->
	<xs:complexType name="AbstractResponseType" abstract="true">
		<xs:annotation>
			<xs:documentation>
				Base type definition of a response payload that can carry any
				type of payload content with following optional elements:&lt;br&gt;
				- timestamp of response message&lt;br&gt;
				- application-level acknowledgement&lt;br&gt;
				- application-level (business-level) errors and warnings
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This value represents the date and time when eBay processed the
						request. The time zone of this value is &lt;a href="types/simpleTypes.html#dateTime"&gt;GMT&lt;/a&gt;
						and the format is the
						ISO 8601 date and time format (YYYY-MM-DDTHH:MM:SS.SSSZ).
						See the "dateTime" type for information about this
						time format and converting to and from the GMT time zone.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ack" type="ns:AckCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the call was successfully processed by eBay.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
							<AllValuesExcept>PartialFailure</AllValuesExcept>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Errors" type="ns:ErrorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						A list of application-level errors or warnings (if any) that were raised
						when eBay processed the request. &lt;br&gt;
						&lt;br&gt;
						Application-level errors occur due to
						problems with business-level data on the client side or on the eBay
						server side. For example, an error would occur if the request contains
						an invalid combination of fields, or it is missing a required field,
						or the value of the field is not recognized. An error could also occur
						if eBay encountered a problem in our internal business logic while
						processing the request.&lt;br&gt;
						&lt;br&gt;
						Only returned if there were warnings or errors.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Build" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This refers to the particular software build that eBay used when
						processing the request and generating the response. This includes the
						version number plus additional information. eBay Developer Support may
						request the build information when helping you resolve technical issues.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The release version that eBay used to process the request.
						&lt;br&gt;
						&lt;br&gt;
						&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt;
						This is usually the latest release version, as specified in the
						release notes. (eBay releases the API to international sites
						about a week after we release it to the US site.) &lt;/span&gt;&lt;br&gt;
						&lt;br&gt;
						If a field in the response returns the token "CustomCode", it usually
						means that the field is a code type (a token or enumeration),
						and that in your request URL (or HTTP header) you specified a
						version that is older than the version in which the token was added
						to the call.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Always</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Schema Versioning Strategy</Title>
							<URL>http://developer.ebay.com/DevZone/XML/docs/HowTo/eBayWS/eBaySchemaVersioning.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorrelationID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						If you pass a value in MessageID in a request, we will return the same
						value in CorrelationID in the response. You can use this for tracking
						that a response is returned for every request and to match particular
						responses to particular requests. Only returned if MessageID was used.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--
##### from file ./../Shared/xsd/AckCodeList.xsd #####

-->
	<xs:simpleType name="AckCodeType">
		<xs:annotation>
			<xs:documentation>
				AckCodeType - Type declaration to be used by other schema. This code identifies
				the acknowledgement code types that eBay could use to communicate the status of
				processing a (request) message to an application. This code would be used as part
				of a response message that contains an application-level acknowledgement element.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Success">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing succeeded
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Failure">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing failed
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing completed with warning information
						being included in the response message
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PartialFailure">
				<xs:annotation>
					<xs:documentation>
						(out) Request processing completed with some failures.
						See the Errors data to determine which portions of the request failed.
						<!-- PRIVATE -->
						<!-- [DocInternal] Ron provided the list of applicable calls. [LT 2006-05-30] -->
						<!-- PRIVATE -->
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--
##### from file ./../Shared/xsd/ErrorClassificationCodeList.xsd #####

-->
	<xs:simpleType name="ErrorClassificationCodeType">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="RequestError">
				<xs:annotation>
					<xs:documentation>
					An error has occurred either as a result of a problem in the sending application or because 
					the application's end-user has attempted to submit invalid data (or missing data). 
					In these cases, do not retry the request. The problem must be corrected before the request 
					can be made again. If the problem is due to something in the application (such as a missing 
					required field), the application must be changed. If the problem is a result of end-user data, 
					the application must alert the end-user to the problem and provide the means for the end-user 
					to correct the data. Once the problem in the application or data is resolved, resend the request to eBay
					with the corrected data. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SystemError">
				<xs:annotation>
					<xs:documentation>
					Indicates that an error has occurred on the eBay system side, such as a database or server down. 
					An application can retry the request as-is a reasonable number of times (eBay recommends twice). 
					If the error persists, contact Developer Technical Support. Once the problem has been resolved, 
					the request may be resent in its original form. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--
##### from file ./../Shared/xsd/ErrorParameterType.xsd #####

-->
	<xs:complexType name="ErrorParameterType">
		<xs:annotation>
			<xs:documentation>
				A variable that contains specific information about the context of this error.
				For example, if you pass in an attribute set ID that does not match
				the specified category, the attribute set ID might be returned as an error parameter.
				Use error parameters to flag fields that users need to correct.
				Also use error parameters to distinguish between errors when multiple
				errors are returned.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The value of the variable.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="ParamID" type="xs:string">
			<xs:annotation>
				<xs:documentation>
				The index of the parameter in the error.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<!--
##### from file ./../Shared/xsd/ErrorType.xsd #####

-->
	<xs:complexType name="ErrorType">
		<xs:annotation>
			<xs:documentation>
				These are request errors (as opposed to system errors) that occur due to problems
				with business-level data (e.g., an invalid combination of arguments) that
				the application passed in.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShortMessage" type="xs:string"  minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A brief description of the condition that raised the error.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LongMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A more detailed description of the condition that raised the error.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorCode" type="xs:token" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A unique code that identifies the particular error condition that occurred.
						Your application can use error codes as identifiers
						in your customized error-handling algorithms.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="UserDisplayHint" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						This field is not currently in use for eBay Shopping Web Services.
						Indicates whether the error message text is intended to be displayed to
						an end user or intended only to be parsed by the application.
						If true or not present (the default), the message text is intended for the end user. If false, the message text is intended for
						the application, and the application should translate the error into a more appropriate message.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<NoCalls/>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeverityCode" type="ns:SeverityCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the error caused the request to fail.&lt;br&gt;
						&lt;br&gt;
						If the request fails and the source of the problem is within the
						application (such as a missing required element), please change the
						application before you  retry the request. If the problem is due to
						end-user input data, please alert the end-user to the problem and
						provide the means for them to correct the data. Once the problem in the
						application or data is resolved, you can attempt to re-send the request
						to eBay.&lt;br&gt;
						&lt;br&gt;
						If the source of the problem is on eBay's side, you can retry the
						request as-is a reasonable number of times (eBay recommends twice).
						If the error persists, contact Developer Technical Support. Once the
						problem has been resolved, the request may be resent in its original
						form.&lt;br&gt;
						&lt;br&gt;
						When a warning occurs, the error is returned in addition to the business
						data. In this case, you do not need to retry the request (as the
						original request was successful). However, depending on the cause or
						nature of the warning, you might need to contact either the end user or
						eBay to effect a long term solution to the problem to prevent it from
						reoccurring in the future.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
						<SeeLink>
							<Title>Requirements for Error Handling</Title>
							<URL>http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&amp;topic=ErrorHandlingGuidelines</URL>
							<For>more information (in the eBay Trading Web Services guide)</For>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorParameters" type="ns:ErrorParameterType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Some warning and error messages return one or more variables that
						contain contextual information about the error. This is often the
						field or value that triggered the error.
						You can usually predict where these will
						occur by looking at the "replaceable_value" indicators in our
						Errors by Number page.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorClassification" type="ns:ErrorClassificationCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						API errors are divided between two classes: system errors and request errors.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<AllCalls/>
							<Returned>Conditionally</Returned>
						</CallInfo>
						<SeeLink>
							<Title>Errors by Number</Title>
							<URL>Errors/ErrorMessages.html</URL>
						</SeeLink>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--
##### from file ./../Shared/xsd/SeverityCodeList.xsd #####

-->
	<xs:simpleType name="SeverityCodeType">
		<xs:annotation>
			<xs:documentation>
				SeverityCodeType - Type declaration to be used by other schema. This code
				identifies the severity of an API error. A code indicates whether there is an API-
				level error or warning that needs to be communicated to the client.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
						(out) The request was processed successfully, but something occurred
						that may affect your application or the user. For example, eBay may have
						changed a value the user sent in. In this case, eBay returns a normal,
						successful response and also returns the warning.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Error">
				<xs:annotation>
					<xs:documentation>
						(out) The request that triggered the error was not processed
						successfully. When a serious application-level error occurs, the error
						is returned instead of the business data.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>


	<!-- ##### XSD_TYPES ##### -->
	<!--

##### from file ../ClientAlerts/xsd/AmountType.xsd #####

-->
	<xs:complexType name="AmountType">
		<xs:annotation>
			<xs:documentation>
				Basic type for specifying monetary amounts. A double value (e.g.,
				1.00 or 1.0) is meaningful as a monetary amount when accompanied by a
				specification of the currency, in which case the value specifies
				the amount in that currency. An AmountType expresses both the value
				(a double) and the currency. Details such as prices, fees, costs,
				and payments are specified as amount types.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="currencyID" type="ns:CurrencyCodeType" use="required">
					<xs:annotation>
						<xs:documentation>
							Currency in which the monetary amount is specified.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>GetUserAlerts</CallName>
								<CallName>GetPublicAlerts</CallName>
								<RequiredInput>No</RequiredInput>
								<Returned>Conditionally</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/AskSellerQuestionEventType.xsd #####

-->
	<xs:complexType name="AskSellerQuestionEventType">
		<xs:annotation>
			<xs:documentation>
				Sent to a seller when a question is posted about one of the seller's active listings.
			</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string">
			<xs:annotation>
				<xs:documentation>
					Item about which seller is being asked questions.
				</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<xs:element name="MessageID" type="xs:string">
			<xs:annotation>
				<xs:documentation>
					Unique ID assigned to the AskSellerQuestion message.
				</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<xs:element name="MessageType" type="ns:MessageTypeCodeType">
			<xs:annotation>
				<xs:documentation>
					Specifies the type of message. For example, AskSellerQuestion.
				</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/BestOfferDeclinedEventType.xsd #####

-->
	<xs:complexType name="BestOfferDeclinedEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BestOffer" type="ns:ClientAlertsBestOfferType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					A container of details about a best offer.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/BestOfferEventType.xsd #####

-->
	<xs:complexType name="BestOfferEventType">
			<xs:annotation>
			<xs:documentation>
			Describes the type of best offer event being alerted.
			</xs:documentation>
			</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the event that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BestOffer" type="ns:ClientAlertsBestOfferType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					A container of details about a best offer.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/BestOfferPlacedEventType.xsd #####

-->
	<xs:complexType name="BestOfferPlacedEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BestOffer" type="ns:ClientAlertsBestOfferType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					A container of details about a best offer.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/BestOfferStatusCodeList.xsd #####

-->
	<xs:simpleType name="BestOfferStatusCodeType">
		<xs:annotation>
			<xs:documentation>
				The status of the best offer.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Pending">
				<xs:annotation>
					<xs:documentation>
						The best offer is awaiting seller response or will naturally expire after 48 hours.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Accepted">
				<xs:annotation>
					<xs:documentation>
						The best offer was accepted by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Declined">
				<xs:annotation>
					<xs:documentation>
						The best offer was rejected by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Expired">
				<xs:annotation>
					<xs:documentation>
						The best offer expired after 48 hours due to no action by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Retracted">
				<xs:annotation>
					<xs:documentation>
						The best offer was retracted by the buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AdminEnded">
				<xs:annotation>
					<xs:documentation>
						The best offer was ended by an administrator.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>
						Retrieve active best offers only.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Countered">
				<xs:annotation>
					<xs:documentation>
						Retrieve all counter best offers.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="All">
				<xs:annotation>
					<xs:documentation>
						Retrieve all best offers (including declined offers, etc.).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/BestOfferTypeCodeType.xsd #####

-->
	<xs:simpleType name="BestOfferTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				The offer type of the best offer.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="BuyerBestOffer">
				<xs:annotation>
					<xs:documentation>
						The buyer has placed best offer on the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerCounterOffer">
				<xs:annotation>
					<xs:documentation>
						The buyer has made a counter offer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerCounterOffer">
				<xs:annotation>
					<xs:documentation>
						The seller has made a counter offer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/BidPlacedEventType.xsd #####

-->
	<xs:complexType name="BidPlacedEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Identifies the action that is the subject of the alert.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site
					on which the item was listed. That is, CurrentPrice is in
					the original listing currency. If the item is a multi-
					quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any.
					The image uses one of the following graphics formats:
					JPEG, BMP, TIF, or GIF. Only returned if the seller chose
					to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the listing.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			 <xs:element name="HighBidderUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique eBay user ID for the user.&lt;br&gt;
					&lt;br&gt;
					Since a bidder's user info is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:&lt;br&gt;
					&lt;br&gt;
					When bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A".&lt;br&gt;
					&lt;br&gt;
					Note that in this format, the anonymous bidder ID stays the same for every auction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveMet" type="xs:boolean" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Indicates whether any bids on this item are greater than the seller's reserve price for the listing (if any).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyItNowAvailable" type="xs:boolean" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Indicates whether Buy It Now is available.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/BidReceivedEventType.xsd #####

-->
	<xs:complexType name="BidReceivedEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the listing.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			 <xs:element name="HighBidderUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique eBay user ID for the user.&lt;br&gt;
					&lt;br&gt;
					Since a bidder's user info is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:&lt;br&gt;
					&lt;br&gt;
					When bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A".&lt;br&gt;
					&lt;br&gt;
					Note that in this format, the anonymous bidder ID stays the same for every auction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ChannelContentType.xsd #####

-->
	<xs:complexType name="ChannelContentType">
		<xs:sequence>
			<xs:element name="ChannelID" type="xs:string" minOccurs="0" >
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChannelType" type="ns:ChannelTypeCodeType" minOccurs="0" >
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the channel, such as an item, that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
					<xs:element name="ChannelEvent" type="ns:ClientAlertsEventType" minOccurs="0" maxOccurs="unbounded">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the event, such as a price change, that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifiedDate" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Specifies the date of the most recent event on the channel.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ChannelDescriptorType.xsd #####

-->
	<xs:complexType name="ChannelDescriptorType">
		<xs:annotation>
		 <xs:documentation>
			Provides channel type and ID, and event type.
		 </xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetPublicAlerts</CallName>
					<RequiredInput>Yes</RequiredInput>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ChannelType" type="ns:ChannelTypeCodeType" minOccurs="0">
				<xs:annotation>
				 <xs:documentation>
					Event type of the public channel.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
					<RequiredInput>Yes</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChannelID" type="xs:string" minOccurs="0">
				<xs:annotation>
				 <xs:documentation>
					Identifier of the channel (ItemID).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
					<RequiredInput>Yes</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
					<xs:documentation>
					Identifies the type of event.
						</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<RequiredInput>Yes</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ChannelTypeCodeList.xsd #####

-->
	<xs:simpleType name="ChannelTypeCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="Item">
			 	<xs:annotation>
				 <xs:documentation>
					An item, identified by an ItemID, is a channel whose content, in the
					form of alerts about events such as price change, can be retrieved
					using GetPublicAlerts.
				 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsBestOfferType.xsd #####

-->
	<xs:complexType name="ClientAlertsBestOfferType">
		<xs:annotation>
		<xs:documentation>
		Identifies and describes the type of best offer event being alerted.
		</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Conditionally</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="BestOfferID" type="xs:string" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				An ID to distinguish this best offer from other best offers made on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BestOfferCodeType" type="ns:BestOfferTypeCodeType" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The best offer type.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				Unique eBay user ID for the user.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ExpirationTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				Date and time (in GMT) the offer naturally expires (if the seller has not accepted or declined the offer).
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The amount of the best offer.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The number of items for which the buyer is making an offer.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Status" type="ns:BestOfferStatusCodeType" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The state of the offer. In the case of a PlaceOffer response that specified a
				best offer, Status may be "Accepted" if the best offer was at or above an
				auto-accept price.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				Text message that was provided by a buyer when placing a best offer.
				Max length: 500 (in bytes).
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				Text response to buyer from seller.
				Max length: 500 (in bytes).
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsEventType.xsd #####

-->
	<xs:complexType name="ClientAlertsEventType">
			<xs:annotation>
			<xs:documentation>
			Identifies the type of event being alerted.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<CallName>GetPublicAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0" >
				<xs:annotation>
					<xs:documentation>
						Type of client alert.
						</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PriceChange" type="ns:PriceChangeEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Sent to a user when the price of an item has changed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="WatchedItemEndingSoon" type="ns:WatchedItemEndingSoonEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when the listing of a watched item is about to end.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
					</xs:annotation>
				</xs:element>
				<xs:element name="Outbid" type="ns:OutbidEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when another buyer has placed a higher maximum bid
					and the buyer is no longer the current high bidder.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemAddedToBidGroup" type="ns:ItemAddedToBidGroupEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					[PD]
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemAddedToWatchList" type="ns:ItemAddedToWatchListEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when the buyer adds an item to her/his watch list.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemRemovedFromBidGroup" type="ns:ItemRemovedFromBidGroupEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					[PD]
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemRemovedFromWatchList" type="ns:ItemRemovedFromWatchListEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when the buyer removes an item from her/his watch list.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondChanceOffer" type="ns:SecondChanceOfferEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when a seller has used the Trading API AddSecondChanceItem to
					extend extend to a non-winning bidder a chance to purchase an unsold item or a simliar item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndOfAuction" type="ns:EndOfAuctionEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing seller (or seller's application) when an auction ends.
					An auction ends either when its duration expires,
					the buyer purchases an item with Buy It Now, or the auction is canceled.
					Applies to both Chinese and Dutch auctions.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPriceEndOfTransaction" type="ns:EndOfTransactionEventType" minOccurs="0">
			<xs:annotation>
				<xs:documentation>
					Alert created for a subscribing seller (or seller's application) when a fixed-price item is sold and the buyer completes the
					checkout process. Not sent when a fixed-price item's duration expires
					without purchase.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FixedPriceTransaction" type="ns:EndOfTransactionEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing seller (or seller's application) when a listing for a fixed price item ends. A fixed price
					listing ends when a buyer starts to move through checkout or purchases the
					item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BidPlaced" type="ns:BidPlacedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when a user places a bid for an item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BidReceived" type="ns:BidReceivedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing seller (or seller's application) when a user places a bid for an item.
						</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemWon" type="ns:ItemWonEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when a user buys an item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemLost" type="ns:ItemLostEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when a user loses a bid for an item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemSold" type="ns:ItemSoldEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					 Alert created for a subscribing seller (or seller's application) when one of their items is sold.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemEnded" type="ns:ItemEndedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Sent when seller has used the Trading API call EndItem to end the specified
					item listing before the date and time at which it would normally end (per
					the listing duration).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemUnsold" type="ns:ItemUnsoldEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing seller (or seller's application) when an item was not sold.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="AskSellerQuestion" type="ns:AskSellerQuestionEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing seller (or seller's application) when a question is posted about one of the seller's active listings.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CounterOfferReceived" type="ns:CounterOfferReceivedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when a seller makes a
					counter offer to the buyer's best offer on an item opted into the Best Offer feature
					by the seller.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BestOfferDeclined" type="ns:BestOfferDeclinedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) when a seller rejects
					the buyer's best offer on an item opted into the Best Offer feature by the seller.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BestOfferPlaced" type="ns:BestOfferPlacedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing buyer (or buyer's application) who makes a best offer
					on an item opted into the Best Offer feature by a seller.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackReceived" type="ns:FeedbackReceivedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing user (or user's application) when the user receives
					feedback.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackLeft" type="ns:FeedbackLeftEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing user (or user's application) when a user leaves
					feedback.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackStarChanged" type="ns:FeedbackStarChangedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Alert created for a subscribing user (or user's application) when a user's feedback
					star level changes.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemMarkedShipped" type="ns:ItemMarkedShippedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Alert created for a subscribing buyer (or buyer's application) when item marked as
						shipped by the seller.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemMarkedPaid" type="ns:ItemMarkedPaidEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Alert created for a subscribing buyer (or buyer's application) when item marked
						as paid by the seller.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemListed" type="ns:ItemListedEventType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Alert created for a subscribing seller when a seller has listed an item. Sent
						for each item the seller lists.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsEventTypeCodeList.xsd #####

-->
	<xs:simpleType name="ClientAlertsEventTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			  Defines all client alerts events that can be used.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="PriceChange">
				<xs:annotation>
					<xs:documentation>
					  (out)	Indicates that the price of an item has changed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemEnded">
				<xs:annotation>
					<xs:documentation>
					  (out)	Indicates the end of item listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OutBid">
				<xs:annotation>
					<xs:documentation>
						Sent to a user when another buyer has placed a higher maximum bid
						and the user is no longer the current high bidder.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndOfAuction">
				<xs:annotation>
					<xs:documentation>
						Sent when an auction ends. An auction ends either when its duration
						expires, the buyer purchases an item with Buy It Now, or the auction is
						canceled. Applies to both Chinese and Dutch auctions.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceEndOfTransaction">
				<xs:annotation>
					<xs:documentation>
						Sent to a seller when a fixed-price item is sold and the buyer
						completes the checkout process. Not sent when a fixed-price item's duration
						expires without purchase.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceTransaction">
				<xs:annotation>
					<xs:documentation>
						Sent to a user when a listing for a fixed price item ends. A fixed
						price listing ends when a buyer starts to move through checkout or purchases
						the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SecondChanceOffer">
				<xs:annotation>
					<xs:documentation>
					Alert sent when a seller has used the Trading API AddSecondChanceItem to
					extend extend to a non-winning bidder a chance to purchase an unsold item or a simliar item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AskSellerQuestion">
				<xs:annotation>
					<xs:documentation>
						Sent to a seller when a question is posted about one of the seller's
						active listings.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WatchedItemEndingSoon">
				<xs:annotation>
					<xs:documentation>
						A notification type where the listing of the watched item is about
						to end. This event has a property with which caller can specify the TimeLeft
						before the listing ends.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BestOffer">
				<xs:annotation>
					<xs:documentation>
						Sent to a seller when a bidder makes a best offer on an item opted
						into the Best Offer feature by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemAddedToWatchList">
				<xs:annotation>
					<xs:documentation>
						An informational alert when a user adds an item to her/his watch list.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemRemovedFromWatchList">
				<xs:annotation>
					<xs:documentation>
						An informational alert when a user removes an item from her/his watch list.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- PRIVATE -->
			<xs:enumeration value="ItemAddedToBidGroup">
				<xs:annotation>
					<xs:documentation>
						An informational alert when a user adds an item to her/his bid group.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemRemovedFromBidGroup">
				<xs:annotation>
					<xs:documentation>
						An informational alert when a user removes an item from her/his bid group.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- PRIVATE -->
			<xs:enumeration value="FeedbackReceived">
				<xs:annotation>
					<xs:documentation>
						Sent to a partner when a buyer leaves feedback for the seller
						or the seller leaves feedback for a buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeedbackLeft">
				<xs:annotation>
					<xs:documentation>
						Sent to who left the feedback when a buyer leaves feedback for the seller
						or the seller leaves feedback for a buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeedbackStarChanged">
				<xs:annotation>
					<xs:documentation>
						Sent to whose feedback star level was changed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BidPlaced">
				<xs:annotation>
					<xs:documentation>
						An informational alert for the buyer when a user places a bid for an item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BidReceived">
				<xs:annotation>
					<xs:documentation>
						An informational alert for the seller when a user places a bid for an item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemWon">
				<xs:annotation>
					<xs:documentation>
						An informational alert for the buyer when a user bought an item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemLost">
				<xs:annotation>
					<xs:documentation>
						An informational alert for the buyer when a user doesn't win an item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemSold">
				<xs:annotation>
					<xs:documentation>
						An informational alert for the seller when a user sold an item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemUnsold">
				<xs:annotation>
					<xs:documentation>
						An informational alert for the seller when an item exipired without sold.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CounterOfferReceived">
				<xs:annotation>
					<xs:documentation>
						Sent to a buyer when a sellerer makes a counter offer to
            the buyer's best offer on an item opted	into the Best Offer
            feature by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BestOfferDeclined">
				<xs:annotation>
					<xs:documentation>
						Sent to a buyer when a seller rejects the buyer's best
            offer on an item opted into the Best Offer feature by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BestOfferPlaced">
				<xs:annotation>
					<xs:documentation>
						Sent to a buyer who makes a best offer on an item opted
						into the Best Offer feature by a seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					  (out) Reserved for future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMarkedShipped">
				<xs:annotation>
					<xs:documentation>
						Alert created for a subscribing buyer (or buyer's application) when item marked as shipped by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMarkedPaid">
				<xs:annotation>
					<xs:documentation>
						Alert created for a subscribing buyer (or buyer's application) when item marked
						as paid by the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemListed">
				<xs:annotation>
					<xs:documentation>
						Alert created for an eBay partner on behalf of a seller when a seller has listed
						an item. Sent for each item the seller lists.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsFeedbackDetailType.xsd #####

-->
	<xs:complexType name="ClientAlertsFeedbackDetailType">
			<xs:annotation>
			 <xs:documentation>
				Contains details about feedback left.
			 </xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		<xs:sequence>
			<xs:element name="CommentingUser" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID for the user who left the feedback.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentText" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Text message left by the user in CommentingUser. Used to provide a more
					in-depth description of the user's opinion of the transaction.
					Returned as text in the language that the
					comment was originally left in.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CommentType" type="ns:CommentTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Type of feedback. Can be Positive, Neutral, Negative, or Withdrawn (see the
					CommentTypeCodeType code list). Positive feedbacks add to the user's total
					feedback score, negative feedbacks lower the score, and neutral feedbacks do
					not affect the score (but do affect the overall picture of the user's online
					reputation).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The ID that uniquely identifies the item listing.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Role" type="ns:TradingRoleCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Indicates whether the user who was the feedback recipient was a Buyer or the Seller for that transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemTitle" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the listing for which feedback was provided. Returned as CDATA.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The final price for the item, associated with the currency identified by the
					currencyId attribute of the AmountType.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique identifier for the feedback entry.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique identifier for the transaction about which this feedback entry was left.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackScore" type="xs:int" minOccurs="0">
			 	<xs:annotation>
					<xs:documentation>
						Indicates the total feedback score for the user who made this feedback entry.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsItemType.xsd #####

-->
	<xs:complexType name="ClientAlertsItemType">
		<xs:annotation>
			<xs:documentation>
				Contains types of item alerts.
			</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<CallName>GetPublicAlerts</CallName>
					<Returned>Conditionally</Returned>
				</CallInfo>
				</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Unique ID of the item that is the subject of the alert.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The total number of bids on the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HighBidderUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique eBay user ID for the user.&lt;br&gt;
					&lt;br&gt;
					Since a bidder's user info is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:&lt;br&gt;
					&lt;br&gt;
					When bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A".&lt;br&gt;
					&lt;br&gt;
					Note that in this format, the anonymous bidder ID stays the same for every auction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HighBidderEIASToken" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique identifier for the high bidding user that does not change when the
					eBay user name is changed. Since a bidder's user info is anonymous, this tag
					will be returned only to that bidder, and to the seller of an item that the
					user is bidding on.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Date and time when the listing ends.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Current price of the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViewItemURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The URL of the Web page where a user can view the listing. On the US site, this is called the "View Item" page.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumToBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Smallest amount the next bid on the item can be.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Name of the item as it appears in the listing or search results.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastModifiedDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date the item was last modified.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveMet" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates whether the reserve price has been met for the listing. True if
						the reserve price was met or no reserve price was specified.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Price" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Amount of the best offer.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Number of individual items involved in the transaction.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrimaryCategoryID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Category ID for the first (or only) category in which the item is listed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsMemberMessageType.xsd #####

-->
	<xs:complexType name="ClientAlertsMemberMessageType">
		<xs:annotation>
			<xs:documentation>
				Contains types of member messages.
			</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Conditionally</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MessageType" type="ns:MessageTypeCodeType">
				<xs:annotation>
					<xs:documentation>
						Contains types of member messages.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuestionType" type="ns:QuestionTypeCodeType">
				<xs:annotation>
					<xs:documentation>
						Contains types of member questions. Possible question types include Shipping,
						Payment, MultipleItemShipping, and CustomizedSubject.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageID" type="xs:string">
				<xs:annotation>
					<xs:documentation>
						Contains types of member messages.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Subject" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Contains types of member messages.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsShipmentType.xsd #####

-->
	<xs:complexType name="ClientAlertsShipmentType">
		<xs:annotation>
			<xs:documentation>
				Contains types of item alerts.
			</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>					
					<Returned>Conditionally</Returned>
				</CallInfo>
				</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShipmentTrackingNumber" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The tracking number associated with the shipment. The format of the shipment
						tracking number must be consistent with the specified ShippingCarrierUsed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippingCarrierUsed" type="ns:ShippingCarrierCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The shipping carrier used.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<OnlyTheseValues>USPS, UPS</OnlyTheseValues>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShippedTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The time that the seller handed off the item to the shipping carrier.
					</xs:documentation>
					<xs:appinfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>			
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsTransactionType.xsd #####

-->
	<xs:complexType name="ClientAlertsTransactionType">
		<xs:annotation>
		<xs:documentation>
		Identifies and describes the transaction.
		</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Conditionally</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="AmountPaid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The amount the buyer paid for the item(s) in the transaction.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="QuantitySold" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				Number of items purchased.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BuyerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
					eBay user ID of the buyer.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique identifier for a single transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CreatedDate" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Indicates the date and time a transaction was created.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderLineItemID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						A unique identifier for every purchase from the seller. 
						When a buyer purchases multiple items from the same listing, each item purchased will have an 
						Order Line Item ID and all items in that purchase will have the same Order ID.
						OrderLineItemID is based upon the combination of the eBay Trading API's ItemID and TransactionID fields. 
						The number before the hyphen is the Item ID and the number after the hyphen is the Transaction ID.
					</xs:documentation>
					<xs:appinfo>
						<MaxLength>100</MaxLength>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsType.xsd #####

-->
	<xs:complexType name="ClientAlertsType">
		<xs:annotation>
		 <xs:documentation>
			One of the available client alerts event types.
		 </xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
		      <!-- PRIVATE -->
			<xs:element name="ClientAlert" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		      <!-- PRIVATE -->
			<xs:element name="ClientAlertEvent" type="ns:ClientAlertsEventType" minOccurs="0" maxOccurs="unbounded">
			 	<xs:annotation>
				 <xs:documentation>
					Specifies the event from among available client alert events.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ClientAlertsUserType.xsd #####

-->
	<xs:complexType name="ClientAlertsUserType">
		<xs:annotation>
			<xs:documentation>
				Contains information about a user.
			</xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Conditionally</Returned>
				</CallInfo>
				</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="UserID" type="xs:string" minOccurs="0">
			<xs:annotation>
				<xs:documentation>
				Unique eBay user ID for the user.&lt;br&gt;
				&lt;br&gt;
				Since a bidder's user info is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:&lt;br&gt;
				&lt;br&gt;
				When bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A".&lt;br&gt;
				&lt;br&gt;
				Note that in this format, the anonymous bidder ID stays the same for every auction.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
					</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<xs:element name="PositiveFeedbackPercent" type="xs:float" minOccurs="0">
			<xs:annotation>
				<xs:documentation>
				Percent of total feedback that is positive. For example, if the member has 50
				feedbacks, where 49 are positive and 1 is neutral or negative, the positive
				feedback percent could be 98.0. The value uses a max precision of 4 and a
				scale of 1. If the user has feedback, this value can be returned regardless of
				whether the member has chosen to make their feedback private. Not returned if
				the user has no feedback.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
					</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackRatingStar" type="ns:FeedbackRatingStarCodeType" minOccurs="0">
			<xs:annotation>
				<xs:documentation>
				Visual indicator of user's feedback score. See FeedbackRatingStarCodeType in the Trading API for specific values.							</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
					</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/CommentTypeCodeList.xsd #####

-->
	<xs:simpleType name="CommentTypeCodeType">
		<xs:annotation>
			<xs:documentation>
				CommentTypeCodeType - Type declaration to be used by other schema.
				These are the possible codes to specify the types of feedback/comment.
				Additional information about feedback is available in the online Help of the eBay site.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Positive">
				<xs:annotation>
					<xs:documentation>
								Positive feedback. Increases total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Neutral">
				<xs:annotation>
					<xs:documentation>
								Neutral feedback. No effect on total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Negative">
				<xs:annotation>
					<xs:documentation>
								Negative feedback. Decreases total feedback score.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Withdrawn">
				<xs:annotation>
					<xs:documentation>
								Withdrawn feedback. Removes the effect of the original
								feedback on total feedback score. Comments from withdrawn feedback
								are still visible.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IndependentlyWithdrawn">
				<xs:annotation>
					<xs:documentation>
								Applies to the eBay Motors site only. Feedback is withdrawn based on
								the decision of a third party.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
								Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/CounterOfferReceivedEventType.xsd #####

-->
	<xs:complexType name="CounterOfferReceivedEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="BestOffer" type="ns:ClientAlertsBestOfferType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					A container of details about a best offer.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/CurrencyCodeList.xsd #####

-->
	<xs:simpleType name="CurrencyCodeType">
		<xs:annotation>
			<xs:documentation>
				Defines the standard 3-letter ISO 4217 currency code set.
				However, only certain currency codes are currently valid for use on eBay.
				The valid codes are documented below with the notation "(in/out)".
				Other codes in this list are for future use.
				The documentation below specifies English names for each currency.
				Alternatively, use GeteBayDetails to retrieve the names programmatically.
				A reference: http://www.xe.com/iso4217.htm
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AFA"/>
			<xs:enumeration value="ALL"/>
			<xs:enumeration value="DZD"/>
			<xs:enumeration value="ADP"/>
			<xs:enumeration value="AOA"/>
			<xs:enumeration value="ARS"/>
			<xs:enumeration value="AMD"/>
			<xs:enumeration value="AWG"/>
			<xs:enumeration value="AZM"/>
			<xs:enumeration value="BSD"/>
			<xs:enumeration value="BHD"/>
			<xs:enumeration value="BDT"/>
			<xs:enumeration value="BBD"/>
			<xs:enumeration value="BYR"/>
			<xs:enumeration value="BZD"/>
			<xs:enumeration value="BMD"/>
			<xs:enumeration value="BTN"/>
			<xs:enumeration value="INR">
				<xs:annotation>
					<xs:documentation>
					Indian Rupee.
					For eBay, you can only specify this currency for listings you submit to the
					India site (site ID 203).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BOV"/>
			<xs:enumeration value="BOB"/>
			<xs:enumeration value="BAM"/>
			<xs:enumeration value="BWP"/>
			<xs:enumeration value="BRL"/>
			<xs:enumeration value="BND"/>
			<xs:enumeration value="BGL"/>
			<xs:enumeration value="BGN"/>
			<xs:enumeration value="BIF"/>
			<xs:enumeration value="KHR"/>
			<xs:enumeration value="CAD">
				<xs:annotation>
					<xs:documentation>
						Canadian Dollar.
						For eBay, you can only specify this currency for listings you submit to the
						Canada site (site ID 2)
						(Items listed on the Canada site can also specify USD.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CVE"/>
			<xs:enumeration value="KYD"/>
			<xs:enumeration value="XAF"/>
			<xs:enumeration value="CLF"/>
			<xs:enumeration value="CLP"/>
			<xs:enumeration value="CNY"/>
			<xs:enumeration value="COP"/>
			<xs:enumeration value="KMF"/>
			<xs:enumeration value="CDF"/>
			<xs:enumeration value="CRC"/>
			<xs:enumeration value="HRK"/>
			<xs:enumeration value="CUP"/>
			<xs:enumeration value="CYP"/>
			<xs:enumeration value="CZK"/>
			<xs:enumeration value="DKK"/>
			<xs:enumeration value="DJF"/>
			<xs:enumeration value="DOP"/>
			<xs:enumeration value="TPE"/>
			<xs:enumeration value="ECV"/>
			<xs:enumeration value="ECS"/>
			<xs:enumeration value="EGP"/>
			<xs:enumeration value="SVC"/>
			<xs:enumeration value="ERN"/>
			<xs:enumeration value="EEK"/>
			<xs:enumeration value="ETB"/>
			<xs:enumeration value="FKP"/>
			<xs:enumeration value="FJD"/>
			<xs:enumeration value="GMD"/>
			<xs:enumeration value="GEL"/>
			<xs:enumeration value="GHC"/>
			<xs:enumeration value="GIP"/>
			<xs:enumeration value="GTQ"/>
			<xs:enumeration value="GNF"/>
			<xs:enumeration value="GWP"/>
			<xs:enumeration value="GYD"/>
			<xs:enumeration value="HTG"/>
			<xs:enumeration value="HNL"/>
			<xs:enumeration value="HKD">
				<xs:annotation>
					<xs:documentation>
						Hong Kong Dollar.
						For eBay, you can only specify this currency for listings you submit to the
						Hong Kong site (site ID 201).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HUF"/>
			<xs:enumeration value="ISK"/>
			<xs:enumeration value="IDR"/>
			<xs:enumeration value="IRR"/>
			<xs:enumeration value="IQD"/>
			<xs:enumeration value="ILS"/>
			<xs:enumeration value="JMD"/>
			<xs:enumeration value="JPY"/>
			<xs:enumeration value="JOD"/>
			<xs:enumeration value="KZT"/>
			<xs:enumeration value="KES"/>
			<xs:enumeration value="AUD">
				<xs:annotation>
					<xs:documentation>
						Australian Dollar.
						For eBay, you can only specify this currency for listings you submit to the
						Australia site (site ID 15).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="KPW"/>
			<xs:enumeration value="KRW"/>
			<xs:enumeration value="KWD"/>
			<xs:enumeration value="KGS"/>
			<xs:enumeration value="LAK"/>
			<xs:enumeration value="LVL"/>
			<xs:enumeration value="LBP"/>
			<xs:enumeration value="LSL"/>
			<xs:enumeration value="LRD"/>
			<xs:enumeration value="LYD"/>
			<xs:enumeration value="CHF">
				<xs:annotation>
					<xs:documentation>
						Swiss Franc.
						For eBay, you can only specify this currency for listings you submit to the
						Switzerland site (site ID 193).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LTL"/>
			<xs:enumeration value="MOP"/>
			<xs:enumeration value="MKD"/>
			<xs:enumeration value="MGF"/>
			<xs:enumeration value="MWK"/>
			<xs:enumeration value="MYR">
				<xs:annotation>
					<xs:documentation>
						Malaysian Ringgit.
						For eBay, you can only specify this currency for listings you submit to the
						Malaysia site (site ID 207).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MVR"/>
			<xs:enumeration value="MTL"/>
			<xs:enumeration value="EUR">
				<xs:annotation>
					<xs:documentation>
						Euro.
						For eBay, you can only specify this currency for listings you submit to these sites:
						Austria (site 16), Belgium_French (site 23),
						France (site 71), Germany (site 77), Italy (site 101), Belgium_Dutch (site 123),
						Netherlands (site 146), Spain (site 186), Ireland (site 205).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MRO"/>
			<xs:enumeration value="MUR"/>
			<xs:enumeration value="MXN"/>
			<xs:enumeration value="MXV"/>
			<xs:enumeration value="MDL"/>
			<xs:enumeration value="MNT"/>
			<xs:enumeration value="XCD"/>
			<xs:enumeration value="MZM"/>
			<xs:enumeration value="MMK"/>
			<xs:enumeration value="ZAR"/>
			<xs:enumeration value="NAD"/>
			<xs:enumeration value="NPR"/>
			<xs:enumeration value="ANG"/>
			<xs:enumeration value="XPF"/>
			<xs:enumeration value="NZD"/>
			<xs:enumeration value="NIO"/>
			<xs:enumeration value="NGN"/>
			<xs:enumeration value="NOK"/>
			<xs:enumeration value="OMR"/>
			<xs:enumeration value="PKR"/>
			<xs:enumeration value="PAB"/>
			<xs:enumeration value="PGK"/>
			<xs:enumeration value="PYG"/>
			<xs:enumeration value="PEN"/>
			<xs:enumeration value="PHP">
				<xs:annotation>
					<xs:documentation>
						Philippines Peso.
						For eBay, you can only specify this currency for listings you submit to the
						Philippines site (site ID 211).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PLN">
				<xs:annotation>
					<xs:documentation>
						Poland, Zloty.
						For eBay, you can only specify this currency for listings you submit to the
						Poland site (site ID 212).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USD">
				<xs:annotation>
					<xs:documentation>
						US Dollar.
						For eBay, you can only specify this currency for listings you submit to the
						US (site ID 0), eBayMotors (site 100), and Canada (site 2) sites.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QAR"/>
			<xs:enumeration value="ROL"/>
			<xs:enumeration value="RUB"/>
			<xs:enumeration value="RUR"/>
			<xs:enumeration value="RWF"/>
			<xs:enumeration value="SHP"/>
			<xs:enumeration value="WST"/>
			<xs:enumeration value="STD"/>
			<xs:enumeration value="SAR"/>
			<xs:enumeration value="SCR"/>
			<xs:enumeration value="SLL"/>
			<xs:enumeration value="SGD">
				<xs:annotation>
					<xs:documentation>
						Singapore Dollar.
						For eBay, you can only specify this currency for listings you submit to the
						Singapore site (site 216).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SKK"/>
			<xs:enumeration value="SIT"/>
			<xs:enumeration value="SBD"/>
			<xs:enumeration value="SOS"/>
			<xs:enumeration value="LKR"/>
			<xs:enumeration value="SDD"/>
			<xs:enumeration value="SRG"/>
			<xs:enumeration value="SZL"/>
			<xs:enumeration value="SEK">
				<xs:annotation>
					<xs:documentation>
						 Swedish Krona.
						 For eBay, you can only specify this currency for listings you submit to the
						 Sweden site (site 218).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SYP"/>
			<xs:enumeration value="TWD">
				<xs:annotation>
					<xs:documentation>
						New Taiwan Dollar. Note that there is no longer an eBay Taiwan site.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TJS"/>
			<xs:enumeration value="TZS"/>
			<xs:enumeration value="THB"/>
			<xs:enumeration value="XOF"/>
			<xs:enumeration value="TOP"/>
			<xs:enumeration value="TTD"/>
			<xs:enumeration value="TND"/>
			<xs:enumeration value="TRL"/>
			<xs:enumeration value="TMM"/>
			<xs:enumeration value="UGX"/>
			<xs:enumeration value="UAH"/>
			<xs:enumeration value="AED"/>
			<xs:enumeration value="GBP">
				<xs:annotation>
					<xs:documentation>
						Pound Sterling.
						For eBay, you can only specify this currency for listings you submit to the
						UK site (site ID 3).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USS"/>
			<xs:enumeration value="USN"/>
			<xs:enumeration value="UYU"/>
			<xs:enumeration value="UZS"/>
			<xs:enumeration value="VUV"/>
			<xs:enumeration value="VEB"/>
			<xs:enumeration value="VND"/>
			<xs:enumeration value="MAD"/>
			<xs:enumeration value="YER"/>
			<xs:enumeration value="YUM"/>
			<xs:enumeration value="ZMK"/>
			<xs:enumeration value="ZWD"/>
			<xs:enumeration value="ATS"/>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/CustomEventType.xsd #####

-->
	<xs:complexType name="CustomEventType">
		<xs:sequence>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Message" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Message accompanying custom event type.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/EndOfAuctionEventType.xsd #####

-->
	<xs:complexType name="EndOfAuctionEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		      <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The total number of bids on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date and time when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Price when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Name of the item as it appears in the listing or search results.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture to be used as the Gallery thumbnail. Ignored if GalleryType is None or unspecified.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Number of items in the transaction.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Transaction" type="ns:ClientAlertsTransactionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
					Information about one transaction.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/EndOfTransactionEventType.xsd #####

-->
	<xs:complexType name="EndOfTransactionEventType">
			<xs:annotation>
			 <xs:documentation>
				Contains information about the end of the transaction that is the subject of the alert.
			 </xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Always</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		      <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The total number of bids the user placed on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date and time when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Price when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Name of the item as it appears in the listing or search results.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture to be used as the Gallery thumbnail. Ignored if GalleryType is None or unspecified.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Transaction" type="ns:ClientAlertsTransactionType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
					Information about one transaction.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/FeedbackLeftEventType.xsd #####

-->
	<xs:complexType name="FeedbackLeftEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackDetail" type="ns:ClientAlertsFeedbackDetailType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Container for details about feedback left.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/FeedbackRatingStarCodeList.xsd #####

-->
	<xs:simpleType name="FeedbackRatingStarCodeType">
		<xs:annotation>
			<xs:documentation>
					 FeedbackRatingStarCodeType - Type declaration to be used by other
					 schema. The color of a feedback score star visually denotes the
					 range in which the member's summary feedback score falls. The score
					 is the net positive feedback minus the net negative feedback left
					 for the member.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
								(out) No graphic displayed, feedback score 0-9.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Yellow">
				<xs:annotation>
					<xs:documentation>
								(out) Yellow Star, feedback score 10-49.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Blue">
				<xs:annotation>
					<xs:documentation>
								(out) Blue Star, feedback score 50-99.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Turquoise">
				<xs:annotation>
					<xs:documentation>
								(out) Turquoise Star, feedback score 100-499.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Purple">
				<xs:annotation>
					<xs:documentation>
								(out) Purple Star, feedback score 500-999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Red">
				<xs:annotation>
					<xs:documentation>
								(out) Red Star, feedback score 1,000-4,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Green">
				<xs:annotation>
					<xs:documentation>
								(out) Green Star, feedback score 5,000-9,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="YellowShooting">
				<xs:annotation>
					<xs:documentation>
								(out) Yellow Shooting Star, feedback score 10,000-24,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TurquoiseShooting">
				<xs:annotation>
					<xs:documentation>
								(out) Turquoise Shooting Star, feedback score 25,000-49,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PurpleShooting">
				<xs:annotation>
					<xs:documentation>
								(out) Purple Shooting Star, feedback score 50,000-99,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RedShooting">
				<xs:annotation>
					<xs:documentation>
								(out) Red Shooting Star, feedback score 100,000-499,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GreenShooting">
				<xs:annotation>
					<xs:documentation>
								(out)Green Shooting Star, feedback score 500,000-999,999.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SilverShooting">
				<xs:annotation>
					<xs:documentation>
								(out)Silver Shooting Star, feedback score 1,000,000 and above.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>			

			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
								(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/FeedbackReceivedEventType.xsd #####

-->
	<xs:complexType name="FeedbackReceivedEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeedbackDetail" type="ns:ClientAlertsFeedbackDetailType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Container for details about feedback left, including User, CommentType, and Item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/FeedbackStarChangedEventType.xsd #####

-->
	<xs:complexType name="FeedbackStarChangedEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="User" type="ns:ClientAlertsUserType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies eBay user.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/GetPublicAlertsRequest.xsd #####

-->
		<xs:element name="GetPublicAlertsRequest" type="GetPublicAlertsRequestType" />
<xs:complexType name="GetPublicAlertsRequestType">
		<xs:annotation>
		 <xs:documentation>
			Retrieves a list of public channel messages.
		 </xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves a list of public channel messages. Input should be in name-value pair format.
				</Summary>
				<RelatedCalls>GetUserAlerts</RelatedCalls>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
				<xs:element name="ApplicationID" type="xs:string" minOccurs="0" >
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the requesting application. This is the same as the AppID you use
					to obtain a Trading API user token, which you include in your
					GetClientAlertsAuthToken request.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<RequiredInput>No</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChannelDescriptor" type="ns:ChannelDescriptorType" minOccurs="0" maxOccurs="unbounded">
			 	<xs:annotation>
				 <xs:documentation>
					Provides channel type and ID, and event type.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<RequiredInput>Yes</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastRequestTime" type="xs:dateTime" minOccurs="0" >
			 	<xs:annotation>
				 <xs:documentation>
						Set this value to inform the API that your application is not an old internal eBay application.
				 </xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>GetPublicAlerts</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
				</xs:annotation>
			</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/GetPublicAlertsResponse.xsd #####

-->
		<xs:element name="GetPublicAlertsResponse" type="GetPublicAlertsResponseType"/>
<xs:complexType name="GetPublicAlertsResponseType">
		<xs:annotation>
			<xs:documentation>
				Retrieves a list of public channel messages.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves a list of public channel messages. Input should be in name-value pair
					format.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="Content" type="ns:ChannelContentType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Contains channel ID, channel type and an array of events.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetPublicAlerts</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/GetUserAlertsRequest.xsd #####

-->
	<xs:complexType name="GetUserAlertsRequestType">
		<xs:annotation>
			<xs:documentation>
				Retrieves alerts privately subscribed to by the user.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves alerts privately subscribed to by the user. Input should be
					in name-value pair format.
				</Summary>
				<RelatedCalls>GetPublicAlerts, Login, Logout</RelatedCalls>
				<RelatedCallsOther>
					<ApiNickname>Trading</ApiNickname>
					<ApiCallRefBaseURL>http://developer.ebay.com/devzone/xml/docs/reference/ebay</ApiCallRefBaseURL>
					<RelatedCall>
						<Name>SetNotificationPreferences</Name>
						<Summary>Manages a user's notification and alerts preferences.</Summary>
					</RelatedCall>
					<RelatedCall>
						<Name>GetClientAlertsAuthToken</Name>
						<Summary>
							Retrieves a token required for retrieving user alerts.
						</Summary>
					</RelatedCall>
				</RelatedCallsOther>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="SessionID" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							Identifier of the session, which must be passed in every time GetUserAlerts is called.
							SessionId does not change over the lifetime of the session.
						</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetUserAlerts</CallName>
									<RequiredInput>Yes</RequiredInput>
									<Returned>Yes</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SessionData" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							Returned from the server in the Login and GetUserAlerts responses, and
							passed in the GetUserAlerts and Logout requests. Because SessionData
							contains an encrypted timestamp, when the application uses the
							SessionData returned from the previous GetUserAlerts call in a new
							GetUserAlerts call, GetUserAlerts returns all new alerts since the
							previous call along with a brand new SessionData for use use next time.
						</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetUserAlerts</CallName>
									<RequiredInput>Yes</RequiredInput>
									<Returned>Yes</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="Version" type="xs:string">
						<xs:annotation>
							<xs:documentation>
							Set this value to inform the API that your application is not an
							application predating the release of the Client Alerts API.
						</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetUserAlerts</CallName>
									<RequiredInput>No</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GetUserAlertsRequest" type="GetUserAlertsRequestType"/>
<!--

##### from file ../ClientAlerts/xsd/GetUserAlertsResponse.xsd #####

-->
	<xs:complexType name="GetUserAlertsResponseType">
		<xs:annotation>
			<xs:documentation>
					Retrieves alerts privately subscribed to by the user.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves alerts privately subscribed to by the user. Input should be in name-value pair format.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ClientAlerts" type="ns:ClientAlertsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies type of alert. For example, BestOfferReceived or Outbid.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetUserAlerts</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SessionData" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								SessionData is returned from the server. Each call passes in the
								session data from the previous call. This is required to correctly
								identify the events to be returned to the caller. Login returns
								SessionId and SessionData to be used for subsequent calls.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetUserAlerts</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GetUserAlertsResponse" type="GetUserAlertsResponseType"/>
<!--

##### from file ../ClientAlerts/xsd/ItemAddedToBidGroupEventType.xsd #####

-->
	<xs:complexType name="ItemAddedToBidGroupEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemAddedToWatchListEventType.xsd #####

-->
	<xs:complexType name="ItemAddedToWatchListEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemEndedEventType.xsd #####

-->
	<xs:complexType name="ItemEndedEventType">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
			</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		      <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The total number of bids the user placed on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date and time when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Price when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Name of the item as it appears in the listing or search results.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Number of items in the transaction.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemListedEventType.xsd #####

-->
	<xs:complexType name="ItemListedEventType">
			<xs:annotation>
				<xs:documentation>
					Container for ItemListed event details.
				</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Identifies the action that is the subject of the alert.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Time of most recent retrieval of data.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Unique ID of the item that is the subject of the alert.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Time stamp of when the listing is scheduled to end, or time stamp of the actual
						end time (if the item ended).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Price when the item was listed, if known.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Name of the item as it appears in the listing or search results.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						URL for a picture used as the Gallery thumbnail, if any. The image uses one
						of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
						the seller chose to show a gallery image.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Quantity" type="xs:int" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Number of items listed.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemLostEventType.xsd #####

-->
	<xs:complexType name="ItemLostEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemMarkedPaidEventType.xsd #####

-->
	<xs:complexType name="ItemMarkedPaidEventType">
		<xs:annotation>
			<xs:documentation>
			  Alert created for a subscribing buyer (or buyer's application) when item marked as paid by the seller.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves alerts privately subscribed to by the user. Input should be in name-value pair format.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique identifier that eBay generates for the order.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies one transaction for a listing.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemMarkedShippedEventType.xsd #####

-->
	<xs:complexType name="ItemMarkedShippedEventType">
		<xs:annotation>
			<xs:documentation>
				Alert created for a subscribing buyer (or buyer's application) when item marked as shipped by the seller.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves alerts privately subscribed to by the user. Input should be in name-value pair format.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrderID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique identifier that eBay generates for the order.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransactionID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies one transaction for a listing.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Shipment" type="ns:ClientAlertsShipmentType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Details about the shipment. Setting the tracking number and carrier
						automatically marks the item as shipped (sets Shipped to true).
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemRemovedFromBidGroupEventType.xsd #####

-->
	<xs:complexType name="ItemRemovedFromBidGroupEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item was listed. That is, CurrentPrice is in the original listing currency. If the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemRemovedFromWatchListEventType.xsd #####

-->
	<xs:complexType name="ItemRemovedFromWatchListEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemSoldEventType.xsd #####

-->
	<xs:complexType name="ItemSoldEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemUnsoldEventType.xsd #####

-->
	<xs:complexType name="ItemUnsoldEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of when the listing is scheduled to end, or time stamp of the actual end time (if the item ended).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ItemWonEventType.xsd #####

-->
	<xs:complexType name="ItemWonEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
	     <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0"/>
			<!-- PRIVATE -->
      <xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The number of bids that have been placed on the item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					eBay user ID of the seller.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time stamp of the actual end time.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse results.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the transaction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/LoginRequest.xsd #####

-->
	<xs:complexType name="LoginRequestType">
		<xs:annotation>
			<xs:documentation>
				Logs the client application in to the Client Alerts server. Required for the GetUserAlerts
				call, and not required for the GetPublicAlerts call. The server returns SessionID and
				SessionData, which are required in subsequent GetUserAlerts calls.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Logs the client application in to the client alerts server. All subsequent GetUserAlerts calls
					will require the SessionID returned by this call. The SessionData element returned by this call
					includes a timestamp to keep track of when alerts have been retrieved. Request should be in name-
					value pair format. Return will be in JSON.
				</Summary>
				<RelatedCalls>GetUserAlerts, Logout</RelatedCalls>
				<RelatedCallsOther>
					<ApiNickname>Trading</ApiNickname>
					<ApiCallRefBaseURL>http://developer.ebay.com/devzone/xml/docs/reference/ebay</ApiCallRefBaseURL>
					<RelatedCall>
						<Name>SetNotificationPreferences</Name>
						<Summary>Manages a user's notification and alerts preferences.</Summary>
					</RelatedCall>
					<RelatedCall>
						<Name>GetClientAlertsAuthToken</Name>
						<Summary>
							Retrieves a token required for retrieving user alerts. Required input is a
							valid user token, which is the same user token used for authentication and
							authorization in the Trading API. Client Alerts token also required for
							Client Alerts API calls Login and Logout.
						</Summary>
					</RelatedCall>
				</RelatedCallsOther>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ClientAlertsAuthToken" type="xs:string" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>
							Authenticates the client to the Client Alerts server. Obtained using the Trading API call
							GetUserAlertsToken. A Client Alerts token is valid for seven days. After the Client
							Alerts token expires, the client will need to use the eBay user token to fetch a
							new Client Alerts token.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>Login</CallName>
								<RequiredInput>Yes</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="LoginRequest" type="LoginRequestType"/>
<!--

##### from file ../ClientAlerts/xsd/LoginResponse.xsd #####

-->
	<xs:complexType name="LoginResponseType">
		<xs:annotation>
			<xs:documentation>
				Logs the client application in to the Client Alerts server. Once logged
				in, a client can use the GetUserAlerts call to retrieve alerts
				previously subscribed to using the SetNotificationPreferences call in
				the Trading API. Return is in JSON format.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Logs the client application in to the Client Alerts server. Once logged
					in, a client can use the GetUserAlerts call to retrieve alerts
					previously subscribed to using the SetNotificationPreferences call in
					the Trading API.
					All subsequent calls to the client alerts server use the SessionID and
					SessionData returned with this response. Return is in JSON format.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="SessionID" type="xs:string" minOccurs="1" maxOccurs="1">
							<xs:annotation>
								<xs:documentation>
								Identifier of the session, which also identifies the user and the application. Must be passed in every time GetUserAlerts is called.
								SessionId does not change over the lifetime of the session. Obtained using the Client Alerts Login call.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>Login</CallName>
										<Returned>Always</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
					<xs:element name="SessionData" type="xs:string" minOccurs="1" maxOccurs="1">
							<xs:annotation>
								<xs:documentation>
								SessionData is initially returned by the Login call. It is passed in with each
								GetUserAlerts request, and an updated version is returned in each response. Contains
								a timestamp which is used to ensure that only fresh alerts are sent.
								</xs:documentation>
								<xs:appinfo>
									<CallInfo>
										<CallName>Login</CallName>
										<Returned>Always</Returned>
									</CallInfo>
								</xs:appinfo>
							</xs:annotation>
						</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="LoginResponse" type="LoginResponseType"/>
<!--

##### from file ../ClientAlerts/xsd/LogoutRequest.xsd #####

-->
		<xs:element name="LogoutRequest" type="LogoutRequestType"/>
<xs:complexType name="LogoutRequestType">
		<xs:annotation>
			<xs:documentation>
				Logs the client application out of the client alerts server.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Logs the client application out of the client alerts server. Input
					should be in name-value pair format. Output will be in JSON.
				</Summary>
				<RelatedCalls>GetUserAlerts, Login</RelatedCalls>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="SessionID" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								Identifier of the session, which also identifies the user and the
								application. Must be passed in every time GetUserAlerts is called.
								SessionId does not change over the lifetime of the session. Obtained using
								the Client Alerts Login call.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>Logout</CallName>
									<RequiredInput>Yes</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SessionData" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								SessionData is initially returned by the Login call. It is passed in with each
								GetUserAlerts request, and an updated version is returned in each response. Contains
								a timestamp which is used to ensure that only fresh alerts are sent.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>Logout</CallName>
									<RequiredInput>Yes</RequiredInput>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/LogoutResponse.xsd #####

-->
		<xs:element name="LogoutResponse" type="LogoutResponseType"/>
<xs:complexType name="LogoutResponseType">
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="SessionData" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								SessionData is initially returned by the Login call. It is passed in with
								each GetUserAlerts request, and an updated version is returned in each
								response. Contains a timestamp which is used to ensure that only fresh
								alerts are sent.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>Logout</CallName>
									<Returned>Yes</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/MessageTypeCodeList.xsd #####

-->
	<xs:simpleType name="MessageTypeCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="AskSellerQuestion">
				<xs:annotation>
					<xs:documentation>
						Member to Member message initiated by bidder/potential bidder
						to a seller of a particular item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ResponseToASQQuestion">
				<xs:annotation>
					<xs:documentation>
						Member to Member message initiated as a response
						to an Ask A Question message.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ContactEbayMember">
				<xs:annotation>
					<xs:documentation>
						Member to Member message initiated by any eBay member
						to another eBay member.
						<!-- PRIVATE -->
						[RowInternal] Not currently available to retrieve
						with GetMemberMessages. Use GetMyMessages instead.
						<!-- PRIVATE -->
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ContactTransactionPartner">
				<xs:annotation>
					<xs:documentation>
						Member message between transaction partners within 90 days
						after the transaction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ResponseToContacteBayMember">
				<xs:annotation>
					<xs:documentation>
						Member to Member message initiated as a response
						to a Contact eBay Member message.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<TagStatus>Reserved</TagStatus>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ContacteBayMemberViaCommunityLink">
				<xs:annotation>
					<xs:documentation>
						Member to Member message initiated by any eBay member
						to another eBay member who has posted on a community forum
						within the past 7 days.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<TagStatus>Reserved</TagStatus>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for future or internal use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="All">
				<xs:annotation>
					<xs:documentation>
						All message types.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ContactMyBidder">
				<xs:annotation>
					<xs:documentation>
						Member to Member message initiated by sellers to their
						bidders during an active listing.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<TagStatus>Reserved</TagStatus>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/OutbidEventType.xsd #####

-->
	<xs:complexType name="OutbidEventType">
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		      <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The total number of bids the user placed on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HighBidderUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique eBay user ID for the high bidder.&lt;br&gt;
					&lt;br&gt;
					Since a bidder's user info is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:&lt;br&gt;
					&lt;br&gt;
					On the US site, UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A".&lt;br&gt;
					&lt;br&gt;
					Note that in this format, the anonymous bidder ID stays the same for every auction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="HighBidderEIASToken" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique identifier for the high bidding user that does not change when the
					eBay user name is changed. Since a bidder's user info is anonymous, this tag
					will be returned only to that bidder, and to the seller of an item that the
					user is bidding on.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date and time when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Price following outbid event.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViewItemURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The URL of the Web page where a user can view the listing. On the US site, this is called the "View Item" page.
				 </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture to be used as the Gallery thumbnail. Ignored if GalleryType is None or unspecified.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumToBid" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Smallest amount the next bid on the item can be.
				 </xs:documentation>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Name of the item as it appears in the listing or search results.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/PriceChangeEventType.xsd #####

-->
	<xs:complexType name="PriceChangeEventType">
		<xs:annotation>
		 <xs:documentation>
			Contains information about the price change event.
		 </xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetPublicAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
		<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
				  Defines all client alerts events that can be used.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		      <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetPublicAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The total number of bids the user placed on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			 <xs:element name="HighBidderUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique eBay user ID for the user.&lt;br&gt;
					&lt;br&gt;
					Since a bidder's user info is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:&lt;br&gt;
					&lt;br&gt;
					When bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A".&lt;br&gt;
					&lt;br&gt;
					Note that in this format, the anonymous bidder ID stays the same for every auction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date and time when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
				 <xs:documentation>
					The current price of the item, in the currency of the site on which the item
					was listed. That is, CurrentPrice is in the original listing currency. If
					the item is a multi-quantity listing, this is the price of one item.
				 </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumToBid" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Smallest amount the next bid on the item can be.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReserveMet" type="xs:boolean" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Indicates whether any bids on this item are greater than the seller's reserve price for the listing (if any).
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetPublicAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/QuestionTypeCodeList.xsd #####

-->
	<xs:simpleType name="QuestionTypeCodeType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="General">
				<xs:annotation>
					<xs:documentation>
			  		General questions about the item.
			  	</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Shipping">
				<xs:annotation>
					<xs:documentation>
						 Questions related to the shipping of the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Payment">
				<xs:annotation>
					<xs:documentation>
						Questions related to the payment for the item.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MultipleItemShipping">
				<xs:annotation>
					<xs:documentation>
						Questions related to the shipping of this item
						bundled with other items also purchased on eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomizedSubject">
				<xs:annotation>
					<xs:documentation>
						Customized subjects set by the seller using
						SetMessagePreferences or the eBay Web site.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<TagStatus>Reserved</TagStatus>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for future or internal use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/SecondChanceOfferEventType.xsd #####

-->
	<xs:complexType name="SecondChanceOfferEventType">
		<xs:annotation>
		 <xs:documentation>
			Contains information about the second chance offer.
		 </xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the action that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		      <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The total number of bids the user placed on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date and time when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Price when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Title" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Name of the item as it appears in the listing or search results.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture to be used as the Gallery thumbnail. Ignored if GalleryType is None or unspecified.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="Quantity" type="xs:int" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Number of items in the listing.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="SecondChanceOriginalItemID" type="xs:string">
			 	<xs:annotation>
				 <xs:documentation>
					The item ID for the original listing from which a second chance offer
					is made. This value is only returned when the data for the second chance
					offer listing is retrieved.
					Output only.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd/ShippingCarrierCodeList.xsd #####

-->
	<xs:simpleType name="ShippingCarrierCodeType">
		<xs:annotation>
			<xs:documentation>
         Identifies a shipping carrier.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="UPS">
				<xs:annotation>
					<xs:documentation>
						United Parcel Service.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPS">
				<xs:annotation>
					<xs:documentation>
						U.S. Postal Service.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- PRIVATE -->
			<xs:enumeration value="FedEx">
				<xs:annotation>
					<xs:documentation>
						FedEx.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- PRIVATE -->
			<xs:enumeration value="DeutschePost">
				<xs:annotation>
					<xs:documentation>
						Deutsche Post.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DHL">
				<xs:annotation>
					<xs:documentation>
						DHL service
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Hermes">
				<xs:annotation>
					<xs:documentation>
						Hermes.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="iLoxx">
				<xs:annotation>
					<xs:documentation>
						iLoxx.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
						Other Postal Service.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- Start FR Shipping Integration (6170) -->
			<xs:enumeration value="ColiposteDomestic">
				<xs:annotation>
					<xs:documentation>
						Coliposte Domestic.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ColiposteInternational">
				<xs:annotation>
					<xs:documentation>
						Coliposte International.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Chronopost">
				<xs:annotation>
					<xs:documentation>
						Chronopost.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- End FR Shipping Integration (6170) -->
			<!-- Start ES Shipping Integration -->
			<xs:enumeration value="Correos">
				<xs:annotation>
					<xs:documentation>
						Correos.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Seur">
				<xs:annotation>
					<xs:documentation>
						Seur.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<!-- End ES Shipping Integration -->
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>


		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/TradingRoleCodeList.xsd #####

-->
	<xs:simpleType name="TradingRoleCodeType">
		<xs:annotation>
			<xs:documentation>
				A means for identifying a person's role in doing business on eBay.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Buyer">
				<xs:annotation>
					<xs:documentation>
						Acting as buyer.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Seller">
				<xs:annotation>
					<xs:documentation>
						Acting as seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						Reserved for future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--

##### from file ../ClientAlerts/xsd/WatchedItemEndingSoonEventType.xsd #####

-->
	<xs:complexType name="WatchedItemEndingSoonEventType">
		<xs:annotation>
		 <xs:documentation>
			Contains information about the imminent end time of a watched item.
		 </xs:documentation>
			<xs:appinfo>
				<CallInfo>
					<CallName>GetUserAlerts</CallName>
					<Returned>Always</Returned>
				</CallInfo>
			</xs:appinfo>
		</xs:annotation>
		<xs:sequence>
		<xs:element name="EventType" type="ns:ClientAlertsEventTypeCodeType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
				  Defines all client alerts events that can be used.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Time of most recent retrieval of data.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
		      <!-- PRIVATE -->
			<xs:element name="Item" type="ns:ClientAlertsItemType" minOccurs="0">
			<xs:annotation>
			<xs:documentation>
			Describes item ending event.
			</xs:documentation>
				<xs:appinfo>
					<CallInfo>
						<CallName>GetUserAlerts</CallName>
						<Returned>Conditionally</Returned>
					</CallInfo>
				</xs:appinfo>
			</xs:annotation>
			</xs:element>
			<!-- PRIVATE -->
			<xs:element name="ItemID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique ID of the item that is the subject of the alert.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Always</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="BidCount" type="xs:int" minOccurs="0">
				<xs:annotation>
				<xs:documentation>
				The total number of bids the user placed on the item.
				</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			 <xs:element name="HighBidderUserID" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Unique eBay user ID for the user.&lt;br&gt;
					&lt;br&gt;
					Since a bidder's user info is anonymous, this tag will contain the real ID value only for that bidder, and the seller of an item that the user is bidding on. For all other users, the real ID value will be replaced with the anonymous value, according to these rules:&lt;br&gt;
					&lt;br&gt;
					When bidding on items listed on the US site: UserID is replaced with the value "a****b" where a and b are random characters from the UserID. For example, if the UserID = IBidALot, it might be displayed as, "I****A".&lt;br&gt;
					&lt;br&gt;
					Note that in this format, the anonymous bidder ID stays the same for every auction.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="SellerUserID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					The eBay ID of the seller who listed the item.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
       <xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Date and time when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="CurrentPrice" type="ns:AmountType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
					Price when the listing ended.
					</xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViewItemURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					The URL of the Web page where a user can view the listing. On the US site, this is called the "View Item" page.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
      <xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					URL for a picture used as the Gallery thumbnail, if any. The image uses one
					of the following graphics formats: JPEG, BMP, TIF, or GIF. Only returned if
					the seller chose to show a gallery image.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetUserAlerts</CallName>
							<Returned>Conditionally</Returned>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="MinimumToBid" type="ns:AmountType" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Smallest amount the next bid on the item can be.
				 </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Title" type="xs:string" minOccurs="0">
			 	<xs:annotation>
				 <xs:documentation>
					Name of the item as it appears in the listing or in search and browse
					results.
				 </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
<!--

##### from file ../ClientAlerts/xsd-private/GetChannelContentRequest.xsd #####

-->
	<xs:complexType name="GetChannelContentRequestType">
		<xs:annotation>
		 <xs:documentation>
			Retrieves alerts about events that are publicly available on the eBay website. Unlike
			GetUserAlerts, does not require a client alerts token and session ID and session data.
		 </xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves alerts about events that are publicly available on the eBay website.
					Does not require login or authentication. Request must be in name-value pair
					format. Response will be in JSON format.
				</Summary>
				<RelatedCalls>GetClientAlerts</RelatedCalls>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
				<xs:element name="ApplicationID" type="xs:string" minOccurs="0" >
			 	<xs:annotation>
				 <xs:documentation>
					Identifies the requesting application. This is the ApplicationID that you receive when you join
					the eBay Developers Program.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetChannelContent</CallName>
							<RequiredInput>Yes</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="ChannelDescriptor" type="ns:ChannelDescriptorType" minOccurs="0" maxOccurs="unbounded">
			 	<xs:annotation>
				 <xs:documentation>
					Provides the channel type and channel ID, and event type. Example of a channel type: an
					Item. Example of a channel ID: an ItemID. Specify an item and the type of event about which
					you want to see alerts.
				 </xs:documentation>
					<xs:appinfo>
						<CallInfo>
							<CallName>GetChannelContent</CallName>
							<RequiredInput>Yes</RequiredInput>
						</CallInfo>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="LastRequestTime" type="xs:dateTime" minOccurs="0" >
			 	<xs:annotation>
				 <xs:documentation>
						Call will return alerts about events occurring after the time set in this element.
				 </xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>GetChannelContent</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
				</xs:annotation>
			</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GetChannelContentRequest" type="GetChannelContentRequestType" />
<!--

##### from file ../ClientAlerts/xsd-private/GetChannelContentResponse.xsd #####

-->
	<xs:complexType name="GetChannelContentResponseType">
		<xs:annotation>
		 <xs:documentation>
					Retrieves alerts about events that are publicly available on the eBay website. Response is
					in JSON format.
		 </xs:documentation>
			<xs:appinfo>
				<Summary>
					Retrieves alerts about events that are publicly available on the eBay website. Response is
					in JSON format.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="Content" type="ns:ChannelContentType" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>
									Contains channel ID, channel type and an array of alerts. An example of a channel
									type is Item. The channel ID for an Item channel is an ItemID. The alerts will be
									about events such as price change or an item ending.
								</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetChannelContent</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
							</xs:annotation>
						</xs:element>
					<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GetChannelContentResponse" type="GetChannelContentResponseType"/>
<!--

##### from file ../ClientAlerts/xsd-private/GetClientAlertsRequest.xsd #####

-->
	<xs:complexType name="GetClientAlertsRequestType">
		<xs:annotation>
			<xs:documentation>
					Requests alerts subscribed to by the user, about events associated with the user. Requires
					login using the client alerts StartSession call. Subscriptions are established using the
					SetNotificationPreferences call in the Trading API. Input
					must be in name-value pair URL format. Output is in JSON.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Requests alerts subscribed to by the user, about events associated with the user. The user
					must have created a user session using the Client Alerts StartSession call. Input
					must be in name-value pair URL format. Output is in JSON.
				</Summary>
				<RelatedCalls>GetChannelContent, StartSession, GetUserAlertsToken</RelatedCalls>
				<RelatedCallsOther>
					<ApiNickname>Trading</ApiNickname>
					<ApiCallRefBaseURL>http://developer.ebay.com/DevZone/xml/docs/Reference/ebay</ApiCallRefBaseURL>
					<RelatedCall>
						<Name>SetNotificationPreferences</Name>
						<Summary>
							Manages a user's notification and alerts preferences. Use this call to specify which
							alerts (if using Client Alerts API) or which notifications (if using Platform
							Notification) you want your application to receive. Notifications and alerts can be
							used to alert production applications of selected events on the eBay site, helping
							reduce the number of times your application needs to retrieve certain information.
						</Summary>
					</RelatedCall>
					<RelatedCall>
						<Name>GetNotificationPreferences</Name>
						<Summary>
							Retrieves the requesting application's notification and alerts preferences. Details
							are only returned for events for which a preference is currently set. For
							example, if you enabled notification for the EndOfAuction event and later disabled
							it, the GetNotificationPreferences response would cite the EndOfAuction event
							preference as Disabled. Otherwise, no details will be returned regarding
							EndOfAuction.
						</Summary>
					</RelatedCall>
					<RelatedCall>
						<Name>GetClientAlertsToken</Name>
						<Summary>
							Fetches a Client Alerts token, which is required input for the Client Alerts call
							GetChannelContent.
						</Summary>
					</RelatedCall>
				</RelatedCallsOther>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractRequestType">
				<xs:sequence>
					<xs:element name="SessionID" type="xs:string" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>
							Identifier of the session, which also identifies the user and the application. Must be passed in every time GetClientAlerts is called.
							SessionId does not change over the lifetime of the session. Obtained using the Client Alerts StartSession call.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>GetClientAlerts</CallName>
								<RequiredInput>Yes</RequiredInput>
								<Returned>Yes</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
					</xs:element>
					<xs:element name="SessionData" type="xs:string" minOccurs="1" maxOccurs="1">
					<xs:annotation>
						<xs:documentation>
							Returned from the server in the StartSession response, and updated in each GetClientAlerts
							response.
							Required in the GetClientAlerts and EndSession requests. Because SessionData
							contains an encrypted timestamp, when the application uses the
							SessionData returned from the previous GetClientAlerts call in a new
							GetClientAlerts call, GetClientAlerts returns all new alerts since the
							previous call along with a brand new SessionData for use use next time.
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>GetClientAlerts</CallName>
								<RequiredInput>Yes</RequiredInput>
								<Returned>Yes</Returned>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
					</xs:element>
					<!-- PRIVATE -->
					<xs:element name="Version" type="xs:string">
					<xs:annotation>
						<xs:documentation>
						</xs:documentation>
						<xs:appinfo>
							<CallInfo>
								<CallName>GetClientAlerts</CallName>
								<RequiredInput>No</RequiredInput>
							</CallInfo>
						</xs:appinfo>
					</xs:annotation>
					</xs:element>
					<!-- PRIVATE -->
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GetClientAlertsRequest" type="GetClientAlertsRequestType"/>
<!--

##### from file ../ClientAlerts/xsd-private/GetClientAlertsResponse.xsd #####

-->
	<xs:complexType name="GetClientAlertsResponseType">
		<xs:annotation>
			<xs:documentation>
					Returns alerts subscribed to by the user, about items associated with the user.
			</xs:documentation>
			<xs:appinfo>
				<Summary>
					Returns alerts subscribed to by the user, about items associated with the user. Response
					will be in JSON format.
				</Summary>
			</xs:appinfo>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ns:AbstractResponseType">
				<xs:sequence>
					<xs:element name="ClientAlerts" type="ns:ClientAlertsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Specifies which type of alert is being returned. Alert types are determined by the
								user subscribing to specific alerts using the SetNotificationPreferences call in the
								Trading API. When the specified events occur on items associated with the user, alerts
								are generated and stored in the Client Alerts server. When the user calls
								GetClientAlerts, the alerts are sent to the user.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetClientAlerts</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:element name="SessionData" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								SessionData is initially returned by the StartSession call. It is passed in with each
								GetClientAlerts request, and an updated version is returned in each response. Contains
								a timestamp which is used to ensure that only fresh alerts are sent.
							</xs:documentation>
							<xs:appinfo>
								<CallInfo>
									<CallName>GetClientAlerts</CallName>
									<Returned>Always</Returned>
								</CallInfo>
							</xs:appinfo>
						</xs:annotation>
					</xs:element>
					<xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:element name="GetClientAlertsResponse" type="GetClientAlertsResponseType"/>


		</xs:schema>
	</wsdl:types>
	
	<wsdl:message name="GetClientAlertsResponse">
		<wsdl:part name="GetClientAlertsResponse" element="ns:GetClientAlertsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetClientAlertsRequest">
		<wsdl:part name="GetClientAlertsRequest" element="ns:GetClientAlertsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetPublicAlertsResponse">
		<wsdl:part name="GetPublicAlertsResponse" element="ns:GetPublicAlertsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetPublicAlertsRequest">
		<wsdl:part name="GetPublicAlertsRequest" element="ns:GetPublicAlertsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetUserAlertsResponse">
		<wsdl:part name="GetUserAlertsResponse" element="ns:GetUserAlertsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetUserAlertsRequest">
		<wsdl:part name="GetUserAlertsRequest" element="ns:GetUserAlertsRequest"/>
	</wsdl:message>
	<wsdl:message name="LoginResponse">
		<wsdl:part name="LoginResponse" element="ns:LoginResponse"/>
	</wsdl:message>
	<wsdl:message name="LoginRequest">
		<wsdl:part name="LoginRequest" element="ns:LoginRequest"/>
	</wsdl:message>
	<wsdl:message name="LogoutResponse">
		<wsdl:part name="LogoutResponse" element="ns:LogoutResponse"/>
	</wsdl:message>
	<wsdl:message name="LogoutRequest">
		<wsdl:part name="LogoutRequest" element="ns:LogoutRequest"/>
	</wsdl:message>
	<wsdl:portType name="ClientAlertsInterface">
			
		<wsdl:operation name="GetClientAlerts">
			<wsdl:input message="ns:GetClientAlertsRequest"/>
			<wsdl:output message="ns:GetClientAlertsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetPublicAlerts">
			<wsdl:input message="ns:GetPublicAlertsRequest"/>
			<wsdl:output message="ns:GetPublicAlertsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetUserAlerts">
			<wsdl:input message="ns:GetUserAlertsRequest"/>
			<wsdl:output message="ns:GetUserAlertsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="Login">
			<wsdl:input message="ns:LoginRequest"/>
			<wsdl:output message="ns:LoginResponse"/>
		</wsdl:operation>
		<wsdl:operation name="Logout">
			<wsdl:input message="ns:LogoutRequest"/>
			<wsdl:output message="ns:LogoutResponse"/>
		</wsdl:operation>
	</wsdl:portType>
	
	<wsdl:binding name="ClientAlertsBinding" type="ns:ClientAlertsInterface">	
	<wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
			
		<wsdl:operation name="GetClientAlerts">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetPublicAlerts">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetUserAlerts">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Login">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="Logout">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	
	<wsdl:service name="ClientAlerts">
			<wsdl:documentation>
				<Version>707</Version>
			</wsdl:documentation>
		<wsdl:port binding="ns:ClientAlertsBinding" name="ClientAlerts">
			<wsdlsoap:address location="http://open.api.ebay.com/clientalerts"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
	
